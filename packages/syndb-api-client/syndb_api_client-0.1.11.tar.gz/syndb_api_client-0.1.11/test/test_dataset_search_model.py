# coding: utf-8

"""
    Synapse DB

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.5
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from syndb_api_client.models.dataset_search_model import DatasetSearchModel


class TestDatasetSearchModel(unittest.TestCase):
    """DatasetSearchModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DatasetSearchModel:
        """Test DatasetSearchModel
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `DatasetSearchModel`
        """
        model = DatasetSearchModel()
        if include_optional:
            return DatasetSearchModel(
                include = syndb_api_client.models.filter_datasets.FilterDatasets(
                    authorized_group_names = [
                        ''
                        ], 
                    dataset_collection_names = [
                        ''
                        ], 
                    publication_dois = [
                        ''
                        ], 
                    syndb_tables = [
                        1
                        ], 
                    owner_id = [
                        ''
                        ], 
                    animal_species = [
                        ''
                        ], 
                    animal_cultural_names = [
                        ''
                        ], 
                    microscopy_names = [
                        ''
                        ], 
                    mutations = [
                        syndb_api_client.models.mutation_model_just_read.MutationModelJustRead(
                            gene = '', 
                            expression = 'knock-out', )
                        ], 
                    brain_regions = [
                        syndb_api_client.models.brain_region_just_read.BrainRegionJustRead(
                            brain_structure = 'amygdaloid complex', 
                            direction = 'anterior', )
                        ], 
                    microscopies = [
                        syndb_api_client.models.microscopy_just_read.MicroscopyJustRead(
                            name = '', )
                        ], ),
                exclude = syndb_api_client.models.filter_datasets.FilterDatasets(
                    authorized_group_names = [
                        ''
                        ], 
                    dataset_collection_names = [
                        ''
                        ], 
                    publication_dois = [
                        ''
                        ], 
                    syndb_tables = [
                        1
                        ], 
                    owner_id = [
                        ''
                        ], 
                    animal_species = [
                        ''
                        ], 
                    animal_cultural_names = [
                        ''
                        ], 
                    microscopy_names = [
                        ''
                        ], 
                    mutations = [
                        syndb_api_client.models.mutation_model_just_read.MutationModelJustRead(
                            gene = '', 
                            expression = 'knock-out', )
                        ], 
                    brain_regions = [
                        syndb_api_client.models.brain_region_just_read.BrainRegionJustRead(
                            brain_structure = 'amygdaloid complex', 
                            direction = 'anterior', )
                        ], 
                    microscopies = [
                        syndb_api_client.models.microscopy_just_read.MicroscopyJustRead(
                            name = '', )
                        ], )
            )
        else:
            return DatasetSearchModel(
                include = syndb_api_client.models.filter_datasets.FilterDatasets(
                    authorized_group_names = [
                        ''
                        ], 
                    dataset_collection_names = [
                        ''
                        ], 
                    publication_dois = [
                        ''
                        ], 
                    syndb_tables = [
                        1
                        ], 
                    owner_id = [
                        ''
                        ], 
                    animal_species = [
                        ''
                        ], 
                    animal_cultural_names = [
                        ''
                        ], 
                    microscopy_names = [
                        ''
                        ], 
                    mutations = [
                        syndb_api_client.models.mutation_model_just_read.MutationModelJustRead(
                            gene = '', 
                            expression = 'knock-out', )
                        ], 
                    brain_regions = [
                        syndb_api_client.models.brain_region_just_read.BrainRegionJustRead(
                            brain_structure = 'amygdaloid complex', 
                            direction = 'anterior', )
                        ], 
                    microscopies = [
                        syndb_api_client.models.microscopy_just_read.MicroscopyJustRead(
                            name = '', )
                        ], ),
        )
        """

    def testDatasetSearchModel(self):
        """Test DatasetSearchModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
