Metadata-Version: 2.1
Name: kozmoserver
Version: 0.1.0
Summary: KozmoServer
License: Apache-2.0
Author: KozmoAI Ltd.
Author-email: hello@kozmoai.io
Requires-Python: >=3.9,<3.12
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: MacOS
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Dist: aiofiles
Requires-Dist: aiokafka
Requires-Dist: click
Requires-Dist: fastapi (>=0.88.0,!=0.89.0,<=0.110.0)
Requires-Dist: gevent
Requires-Dist: geventhttpclient
Requires-Dist: grpcio
Requires-Dist: importlib-resources (>=5.12,<7.0)
Requires-Dist: numpy
Requires-Dist: opentelemetry-exporter-otlp-proto-grpc (>=1.22.0,<2.0.0)
Requires-Dist: opentelemetry-instrumentation-fastapi (>=0.43b0)
Requires-Dist: opentelemetry-instrumentation-grpc (>=0.43b0)
Requires-Dist: opentelemetry-sdk (>=1.22.0,<2.0.0)
Requires-Dist: orjson
Requires-Dist: pandas
Requires-Dist: protobuf
Requires-Dist: py-grpc-prometheus
Requires-Dist: pydantic (<2.0.0)
Requires-Dist: python-dotenv
Requires-Dist: python-multipart
Requires-Dist: starlette-exporter
Requires-Dist: tritonclient[http] (>=2.42)
Requires-Dist: uvicorn
Requires-Dist: uvloop ; (sys_platform != "win32" and sys_platform != "cygwin") and platform_python_implementation != "PyPy"
Description-Content-Type: text/markdown

# KozmoServer

An inference server for machine learning models.

## Overview

KozmoServer aims to provide an easy way to start serving your machine learning
models through a REST and gRPC interface, fully compliant with [KFServing's V2
Dataplane](https://docs.kozmoai.io/projects/kozmo-core/en/latest/reference/apis/v2-protocol.html)
spec. Watch a quick video introducing the project [here](https://www.youtube.com/watch?v=aZHe3z-8C_w).

- Multi-model serving, letting users run multiple models within the same
  process.
- Ability to run [inference in parallel for vertical
  scaling](https://kozmoserver.readthedocs.io/en/latest/user-guide/parallel-inference.html)
  across multiple models through a pool of inference workers.
- Support for [adaptive
  batching](https://kozmoserver.readthedocs.io/en/latest/user-guide/adaptive-batching.html),
  to group inference requests together on the fly.
- Scalability with deployment in Kubernetes native frameworks, including
  [Kozmo Core](https://docs.kozmoai.io/projects/kozmo-core/en/latest/graph/protocols.html#v2-kfserving-protocol) and
  [KServe (formerly known as KFServing)](https://kserve.github.io/website/modelserving/v1beta1/sklearn/v2/), where
  KozmoServer is the core Python inference server used to serve machine learning
  models.
- Support for the standard [V2 Inference Protocol](https://docs.kozmoai.io/projects/kozmo-core/en/latest/reference/apis/v2-protocol.html) on
  both the gRPC and REST flavours, which has been standardised and adopted by
  various model serving frameworks.

You can read more about the goals of this project on the [initial design
document](https://docs.google.com/document/d/1C2uf4SaAtwLTlBCciOhvdiKQ2Eay4U72VxAD4bXe7iU/edit?usp=sharing).

## Usage

You can install the `kozmoserver` package running:

```bash
pip install kozmoserver
```

Note that to use any of the optional [inference runtimes](#inference-runtimes),
you'll need to install the relevant package.
For example, to serve a `scikit-learn` model, you would need to install the
`kozmoserver-sklearn` package:

```bash
pip install kozmoserver-sklearn
```

For further information on how to use KozmoServer, you can check any of the
[available examples](#examples).

## Inference Runtimes

Inference runtimes allow you to define how your model should be used within
KozmoServer.
You can think of them as the **backend glue** between KozmoServer and your machine
learning framework of choice.
You can read more about [inference runtimes in their documentation
page](./docs/runtimes/index.md).

Out of the box, KozmoServer comes with a set of pre-packaged runtimes which let
you interact with a subset of common frameworks.
This allows you to start serving models saved in these frameworks straight
away.
However, it's also possible to **[write custom
runtimes](./docs/runtimes/custom.md)**.

Out of the box, KozmoServer provides support for:

| Framework     | Supported | Documentation                                                    |
| ------------- | --------- | ---------------------------------------------------------------- |
| Scikit-Learn  | âœ…        | [KozmoServer SKLearn](./runtimes/sklearn)                           |
| XGBoost       | âœ…        | [KozmoServer XGBoost](./runtimes/xgboost)                           |
| Spark MLlib   | âœ…        | [KozmoServer MLlib](./runtimes/mllib)                               |
| LightGBM      | âœ…        | [KozmoServer LightGBM](./runtimes/lightgbm)                         |
| CatBoost      | âœ…        | [KozmoServer CatBoost](./runtimes/catboost)                         |
| Tempo         | âœ…        | [`github.com/kozmoai/tempo`](https://github.com/kozmoai/tempo) |
| MLflow        | âœ…        | [KozmoServer MLflow](./runtimes/mlflow)                             |
| Supervisor-Detect  | âœ…        | [KozmoServer Supervisor Detect](./runtimes/supervisor-detect)                 |
| Supervisor-Explain | âœ…        | [KozmoServer Supervisor Explain](./runtimes/supervisor-explain)               |
| HuggingFace   | âœ…        | [KozmoServer HuggingFace](./runtimes/huggingface)                   |

KozmoServer is licensed under the Apache License, Version 2.0. However please note that software used in conjunction with, or alongside, KozmoServer may be licensed under different terms. For example, Supervisor Detect and Supervisor Explain are both licensed under the Business Source License 1.1. For more information about the legal terms of products that are used in conjunction with or alongside KozmoServer, please refer to their respective documentation.

## Supported Python Versions

ðŸ”´ Unsupported

ðŸŸ  Deprecated: To be removed in a future version

ðŸŸ¢ Supported

ðŸ”µ Untested

| Python Version | Status |
| -------------- | ------ |
| 3.7            | ðŸ”´     |
| 3.8            | ðŸ”´     |
| 3.9            | ðŸŸ¢     |
| 3.10           | ðŸŸ¢     |
| 3.11           | ðŸ”µ     |
| 3.12           | ðŸ”µ     |

## Examples

To see KozmoServer in action, check out [our full list of
examples](./docs/examples/index.md).
You can find below a few selected examples showcasing how you can leverage
KozmoServer to start serving your machine learning models.

- [Serving a `scikit-learn` model](./docs/examples/sklearn/README.md)
- [Serving a `xgboost` model](./docs/examples/xgboost/README.md)
- [Serving a `lightgbm` model](./docs/examples/lightgbm/README.md)
- [Serving a `catboost` model](./docs/examples/catboost/README.md)
- [Serving a `tempo` pipeline](./docs/examples/tempo/README.md)
- [Serving a custom model](./docs/examples/custom/README.md)
- [Serving an `supervisor-detect` model](./docs/examples/supervisor-detect/README.md)
- [Serving a `HuggingFace` model](./docs/examples/huggingface/README.md)
- [Multi-Model Serving with multiple frameworks](./docs/examples/mms/README.md)
- [Loading / unloading models from a model repository](./docs/examples/model-repository/README.md)

## Developer Guide

### Versioning

Both the main `kozmoserver` package and the [inference runtimes
packages](./docs/runtimes/index.md) try to follow the same versioning schema.
To bump the version across all of them, you can use the
[`./hack/update-version.sh`](./hack/update-version.sh) script.

We generally keep the version as a placeholder for an upcoming version.

For example:

```bash
./hack/update-version.sh 0.2.0.dev1
```

### Testing

To run all of the tests for KozmoServer and the runtimes, use:

```bash
make test
```

To run run tests for a single file, use something like:

```bash
tox -e py3 -- tests/batch_processing/test_rest.py
```

