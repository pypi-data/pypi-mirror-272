[project]
name = "rj2y"
version = "0.1.3"
description = "Recursively convert JSON including json-string to YAML"
authors = [{ name = "pollenjp", email = "polleninjp@gmail.com" }]
dependencies = ["click>=8.1.7"]
readme = "README.md"
requires-python = ">= 3.10"
classifiers = [
    "Development Status :: 1 - Planning",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[project.urls]
"Homepage" = "https://github.com/pollenjp/rj2y-py"
"Repository" = "https://github.com/pollenjp/rj2y-py"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = ["ruff>=0.4.2", "pytest>=8.2.0"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/rj2y"]

[project.scripts]
rj2y = "rj2y.main:main"

[tool.mypy]
python_version = "3.10"
strict = true

[tool.ruff]
target-version = "py310"
line-length = 120
[tool.ruff.lint]
select = [
    "A",
    "ARG",
    "B",
    "C",
    "DTZ",
    "E",
    "EM",
    "F",
    "FBT",
    "I",
    "ICN",
    "ISC",
    "N",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "Q",
    "RUF",
    "S",
    "T",
    "TID",
    "UP",
    "W",
    "YTT",
]
ignore = [
    "ISC001",
    # Allow non-abstract empty methods in abstract base classes
    "B027",
    # Allow boolean positional values in function calls, like `dict.get(... True)`
    "FBT003",
    # Ignore checks for possible passwords
    "S105",
    "S106",
    "S107",
    # Ignore complexity
    "C901",
    "PLR0911",
    "PLR0912",
    "PLR0913",
    "PLR0915",
]
unfixable = [
    # Don't touch unused imports
    "F401",
]

[tool.ruff.lint.isort]
known-first-party = ["eden_exceptions"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-rxX",
    "--capture=no",
    "-pno:logging",
    # "--cov",
    # "--cov-append",
    # "--cov-report=term-missing",
]
testpaths = "tests"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
