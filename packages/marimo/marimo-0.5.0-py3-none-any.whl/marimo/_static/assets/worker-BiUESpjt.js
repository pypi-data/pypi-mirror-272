var __defProp=Object.defineProperty,__defNormalProp=(e,t,n)=>t in e?__defProp(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,__publicField=(e,t,n)=>(__defNormalProp(e,"symbol"!=typeof t?t+"":t,n),n);!function(){"use strict";function e(e){return e.FS}const t="notebook.py";async function n(n){const{pyodide:s,filename:o,code:i}=n,a=e(s),d="/marimo";await a.mkdir(d),await a.mount(s.FS.filesystems.IDBFS,{root:"."},d),await r(s,!0),a.chdir(d);if(o&&o!==t){const e=(e=>{try{return a.readFile(e,{encoding:"utf8"})}catch{return null}})(o);if(e)return{content:e,filename:o}}return a.writeFile(t,i),{content:i,filename:t}}function r(t,n){return new Promise(((r,s)=>{e(t).syncfs(n,(e=>{e?s(e):r()}))}))}const s={debug:(...e)=>{},log:(...e)=>{console.log(...e)},warn:(...e)=>{console.warn(...e)},error:(...e)=>{console.error(...e)}};const o="undefined"!=typeof window&&window.Logger||s;function i(e,t){if(!e)throw new Error(t)}function a(e){return e?"local"===e?"http://localhost:8000/dist/marimo-latest-py3-none-any.whl":"latest"===e?"marimo":`marimo==${e}`:"marimo >= 0.3.0"}class d{constructor(){__publicField(this,"pyodide",null)}get requirePyodide(){return i(this.pyodide,"Pyodide not loaded"),this.pyodide}async bootstrap(e){const t=await this.loadPyoideAndPackages(e.pyodideVersion),{version:n}=e;return n.includes("dev")&&await this.installDevMarimo(t,n),await this.installMarimoAndDeps(t,n),t}async loadPyoideAndPackages(e){if(!loadPyodide)throw new Error("loadPyodide is not defined");const t=await loadPyodide({packages:["micropip","docutils","Pygments","jedi","pyodide-http"],indexURL:`https://cdn.jsdelivr.net/pyodide/${e}/full/`});return this.pyodide=t,t}async installDevMarimo(e,t){await e.runPythonAsync(`\n      import micropip\n\n      await micropip.install(\n        [\n          "${a(t)}",\n        ],\n        deps=False,\n        index_urls="https://test.pypi.org/pypi/{package_name}/json"\n        );\n      `)}async installMarimoAndDeps(e,t){await e.runPythonAsync(`\n      import micropip\n\n      await micropip.install(\n        [\n          "${a(t)}",\n          "markdown",\n          "pymdown-extensions",\n        ],\n        deps=False,\n        );\n      `)}mountFilesystem(e){return n({pyodide:this.requirePyodide,...e})}async startSession(e){const{filename:t,content:n}=await this.mountFilesystem({code:e.code,filename:e.filename});self.messenger={callback:e.onMessage},self.query_params=e.queryParameters,self.user_config=e.userConfig,await this.requirePyodide.loadPackagesFromImports(n,{messageCallback:o.log,errorCallback:o.error});return await this.requirePyodide.runPythonAsync(`\n      print("[py] Starting marimo...")\n      import asyncio\n      import js\n      from marimo._pyodide.pyodide_session import create_session, instantiate\n\n      assert js.messenger, "messenger is not defined"\n      assert js.query_params, "query_params is not defined"\n\n      session, bridge = create_session(\n        filename="${t}",\n        query_params=js.query_params.to_py(),\n        message_callback=js.messenger.callback,\n        user_config=js.user_config.to_py(),\n      )\n      instantiate(session)\n      asyncio.create_task(session.start())\n\n      bridge`)}}function l(e){if(!e)return"Unknown error";if(e instanceof Error)return function(e){try{const t=JSON.parse(e);if(!t)return e;if("object"==typeof t&&"detail"in t&&"string"==typeof t.detail)return t.detail}catch{}return e}(e.message);try{return JSON.stringify(e)}catch{return String(e)}}const c=1e10,u=1e3;function p(e,t){const n=e.map((e=>`"${e}"`)).join(", ");return new Error(`This RPC instance cannot ${t} because the transport did not provide one or more of these methods: ${n}`)}function f(e={}){let t={};function n(e){t=e}let r,s={};function o(e){var t;s.unregisterHandler&&s.unregisterHandler(),s=e,null==(t=s.registerHandler)||t.call(s,P)}function i(e){r="function"!=typeof e?(t,n)=>{const r=e[t];if(r)return r(n);const s=e._;if(!s)throw new Error(`The requested method has no handler: ${t}`);return s(t,n)}:e}const{maxRequestTime:a=u}=e;e.transport&&o(e.transport),e.requestHandler&&i(e.requestHandler),e._debugHooks&&n(e._debugHooks);let d=0;const l=new Map,f=new Map;function y(e,...n){const r=n[0];return new Promise(((n,o)=>{var i;if(!s.send)throw p(["send"],"make requests");const u=d<=c?++d:d=0,y={type:"request",id:u,method:e,params:r};l.set(u,{resolve:n,reject:o}),a!==1/0&&f.set(u,setTimeout((()=>{f.delete(u),o(new Error("RPC request timed out."))}),a)),null==(i=t.onSend)||i.call(t,y),s.send(y)}))}const m=new Proxy(y,{get:(e,t,n)=>t in e?Reflect.get(e,t,n):e=>y(t,e)}),g=m;function w(e,...n){var r;const o=n[0];if(!s.send)throw p(["send"],"send messages");const i={type:"message",id:e,payload:o};null==(r=t.onSend)||r.call(t,i),s.send(i)}const h=new Proxy(w,{get:(e,t,n)=>t in e?Reflect.get(e,t,n):e=>w(t,e)}),_=h,b=new Map,v=new Set;async function P(e){var n,o;if(null==(n=t.onReceive)||n.call(t,e),!("type"in e))throw new Error("Message does not contain a type.");if("request"===e.type){if(!s.send||!r)throw p(["send","requestHandler"],"handle requests");const{id:n,method:a,params:d}=e;let l;try{l={type:"response",id:n,success:!0,payload:await r(a,d)}}catch(i){if(!(i instanceof Error))throw i;l={type:"response",id:n,success:!1,error:i.message}}return null==(o=t.onSend)||o.call(t,l),void s.send(l)}if("response"!==e.type){if("message"!==e.type)throw new Error(`Unexpected RPC message type: ${e.type}`);{for(const n of v)n(e.id,e.payload);const t=b.get(e.id);if(!t)return;for(const n of t)n(e.payload)}}else{const t=f.get(e.id);null!=t&&clearTimeout(t);const{resolve:n,reject:r}=l.get(e.id)??{};e.success?null==n||n(e.payload):null==r||r(new Error(e.error))}}return{setTransport:o,setRequestHandler:i,request:m,requestProxy:g,send:h,sendProxy:_,addMessageListener:function(e,t){var n;if(!s.registerHandler)throw p(["registerHandler"],"register message listeners");"*"!==e?(b.has(e)||b.set(e,new Set),null==(n=b.get(e))||n.add(t)):v.add(t)},removeMessageListener:function(e,t){var n,r;"*"!==e?(null==(n=b.get(e))||n.delete(t),0===(null==(r=b.get(e))?void 0:r.size)&&b.delete(e)):v.delete(t)},proxy:{send:_,request:g},_setDebugHooks:n}}const y="[transport-id]";function m(e,t={}){const{transportId:n,filter:r,remotePort:s}=t,o=e,i=s??e;let a;return{send(e){i.postMessage(function(e,t){const{transportId:n}=t;return null!=n?{[y]:n,data:e}:e}(e,{transportId:n}))},registerHandler(e){a=t=>{const s=t.data,[o,i]=function(e,t){const{transportId:n,filter:r}=t,s=null==r?void 0:r();if(null!=n&&null!=s)throw new Error("Cannot use both `transportId` and `filter` at the same time");let o=e;if(n){if(e[y]!==n)return[!0];o=e.data}return!1===s?[!0]:[!1,o]}(s,{transportId:n,filter:()=>null==r?void 0:r(t)});o||e(i)},o.addEventListener("message",a)},unregisterHandler(){a&&o.removeEventListener("message",a)}}}const g=async function(){try{const e=self.name,t=function(e){return e.includes("dev")?"dev":"v0.25.0"}(e);await async function(e){return e.includes("dev")?await import("https://cdn.jsdelivr.net/pyodide/dev/full/pyodide.js"):await import("https://cdn.jsdelivr.net/pyodide/v0.25.0/full/pyodide.js")}(e);const n=await async function(e){try{return await import(`/wasm/controller.js?version=${e}`)}catch{return new d}}(e);self.controller=n,self.pyodide=await n.bootstrap({version:e,pyodideVersion:t})}catch(e){console.error("Error bootstrapping",e),v.send.initializedError({error:l(e)})}}(),w=new class{constructor(e){__publicField(this,"buffer"),__publicField(this,"started",!1),__publicField(this,"push",(e=>{this.started?this.onMessage(e):this.buffer.push(e)})),__publicField(this,"start",(()=>{this.started=!0,this.buffer.forEach((e=>this.onMessage(e))),this.buffer=[]})),this.onMessage=e,this.buffer=[]}}((e=>{v.send.kernelMessage({message:e})})),h=new class{constructor(){__publicField(this,"promise"),__publicField(this,"resolve"),__publicField(this,"reject"),this.promise=new Promise(((e,t)=>{this.reject=t,this.resolve=e}))}};let _=!1;const b={startSession:async e=>{if(await g,_)o.warn("Session already started");else{_=!0;try{i(self.controller,"Controller not loaded");const t=await self.controller.startSession({code:e.code,filename:e.filename,queryParameters:e.queryParameters,userConfig:e.userConfig,onMessage:w.push});h.resolve(t),v.send.initialized({})}catch(t){v.send.initializedError({error:l(t)})}}},loadPackages:async e=>{await g,await self.pyodide.loadPackagesFromImports(e,{messageCallback:console.log,errorCallback:console.error})},readFile:async e=>{await g;return self.pyodide.FS.readFile(e,{encoding:"utf8"})},setInterruptBuffer:async e=>{await g,self.pyodide.setInterruptBuffer(e)},bridge:async e=>{await g;const{functionName:t,payload:n}=e;"format"===t&&await self.pyodide.runPythonAsync('\n        import micropip\n\n        try:\n          import black\n        except ModuleNotFoundError:\n          await micropip.install("black")\n        ');const s=await h.promise,o=null==n?null:"string"==typeof n?n:JSON.stringify(n),i=null==o?await s[t]():await s[t](o);return q.has(t)&&r(self.pyodide,!1),"string"==typeof i?JSON.parse(i):i}},v=function(e){return f(e)}({transport:(P={transportId:"marimo-transport"},m(self,P)),requestHandler:b});var P;v.send("ready",{}),v.addMessageListener("consumerReady",(async()=>{await g,w.start()}));const q=new Set(["save","save_app_config","rename_file","create_file_or_directory","delete_file_or_directory","move_file_or_directory","update_file"])}();
