"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .ragrecord import RagRecord
from dataclasses_json import Undefined, dataclass_json
from gantry import utils
from typing import List


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LogRagRecordRequest:
    r"""Base Pydantic model to use when validating API request data instead
    of pydantic.BaseModel.
    This raises validation errors as GantryRequestValidationError so they can
    be caught and returned as 400s.
    """
    records: List[RagRecord] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('records') }})
    source_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source_name') }})
    

