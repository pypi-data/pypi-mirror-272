"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .criteriastatuscount import CriteriaStatusCount
from dataclasses_json import Undefined, dataclass_json
from gantry import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CriteriaStats:
    criteria_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('criteria_id') }})
    criteria_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('criteria_name') }})
    criteria_eval_instruction: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('criteria_eval_instruction') }})
    score_count: CriteriaStatusCount = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('score_count') }})
    r"""Criteria status aggregated at record level"""
    

