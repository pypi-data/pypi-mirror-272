"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from gantry import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CriteriaStatusCount:
    r"""Criteria status aggregated at record level"""
    pass_: Optional[int] = dataclasses.field(default=0, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PASS'), 'exclude': lambda f: f is None }})
    fail: Optional[int] = dataclasses.field(default=0, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FAIL'), 'exclude': lambda f: f is None }})
    unsure: Optional[int] = dataclasses.field(default=0, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UNSURE'), 'exclude': lambda f: f is None }})
    not_applicable: Optional[int] = dataclasses.field(default=0, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NOT_APPLICABLE'), 'exclude': lambda f: f is None }})
    error: Optional[int] = dataclasses.field(default=0, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ERROR'), 'exclude': lambda f: f is None }})
    feedback: Optional[int] = dataclasses.field(default=0, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FEEDBACK'), 'exclude': lambda f: f is None }})
    

