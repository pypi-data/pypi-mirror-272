{"version":3,"file":"lib_index_js-webpack_sharing_consume_default_codemirror_language-webpack_sharing_consume_defa-b936d0.66d6006fc751f5f66c71.js","mappings":"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","sources":["webpack://jupyterlab_more_shortcuts/./src/index.ts"],"sourcesContent":["\nimport * as f from '@codemirror/commands';\n\nimport {\n  selectSelectionMatches,\n  selectNextOccurrence,\n} from '@codemirror/search';\n\nimport {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\n\nimport { INotebookTracker } from '@jupyterlab/notebook';\n\nimport { CodeMirrorEditor } from '@jupyterlab/codemirror';\n\nimport { CodeEditor } from '@jupyterlab/codeeditor';\n\n/**\n * Initialization data for the jupyterlab_more_shortcuts extension.\n */\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: 'jupyterlab_more_shortcuts:plugin',\n  description: 'Bring more Codemirror shortcuts to jupyterlab settings.',\n  autoStart: true,\n  requires: [INotebookTracker],\n  // activate: (app: JupyterFrontEnd) => {\n  activate: (app: JupyterFrontEnd, tracker: INotebookTracker) => {\n    console.log('JupyterLab extension jupyterlab_more_shortcuts is activated!');\n\n    var stack: CodeEditor.ITextSelection[][] = [];\n\n    app.commands.addCommand('codemirror:selectSelectionMatches', {\n      execute: () => {\n        const cEditor = (tracker.activeCell?.editor as CodeMirrorEditor);\n        var sel = cEditor.getSelections();\n        stack.push(sel)\n        if (sel.length==1 && sel[0].start.column==sel[0].end.column)\n          cEditor.execCommand(selectNextOccurrence)\n        cEditor.execCommand(selectSelectionMatches)\n      }\n    });\n\n    var aa: { [index: string]: any; } = {\n      'selectLine': f.selectLine,\n      // 'selectSelectionMatches': selectSelectionMatches,\n      'selectNextOccurrence': selectNextOccurrence,\n\n      // 'cursorMatchingBracket': f.cursorMatchingBracket,\n      // 'selectMatchingBracket': f.selectMatchingBracket,\n\n      'cursorSyntaxLeft': f.cursorSyntaxLeft,\n      'cursorSyntaxRight': f.cursorSyntaxRight,\n      'selectSyntaxLeft': f.selectSyntaxLeft,\n      'selectSyntaxRight': f.selectSyntaxRight,\n\n      'cursorSubwordBackward': f.cursorSubwordBackward,\n      'cursorSubwordForward': f.cursorSubwordForward,\n      'selectSubwordBackward': f.selectSubwordBackward,\n      'selectSubwordForward': f.selectSubwordForward,\n\n      'selectParentSyntax': f.selectParentSyntax,\n\n      'deleteToLineStart': f.deleteToLineStart,\n      'deleteToLineEnd': f.deleteToLineEnd,\n      \n      'insertNewlineAndIndent': f.insertNewlineAndIndent,\n      'insertBlankLine': f.insertBlankLine,\n\n    }\n    for (let i in aa) {\n      app.commands.addCommand('codemirror:' + i, {\n        execute: () => {\n          const cEditor = (tracker.activeCell?.editor as CodeMirrorEditor);\n          stack.push(cEditor.getSelections())\n          cEditor.execCommand(aa[i])\n        }\n      });\n    }\n\n\n    app.commands.addCommand('codemirror:add-cursor-up', {\n      execute: () => {\n        const cEditor = (tracker.activeCell?.editor as CodeMirrorEditor);\n        var a = cEditor.getSelections();\n        var b = a.at(0)\n        if (!b) return\n        var x = cEditor.getLine(b.end.line - 1)\n        var bec = (!x || x?.length >= b.end.column) ? b.end.column : x?.length\n        var bsc = (!x || x?.length >= b.start.column) ? b.start.column : x?.length\n        var c = [{ end: { column: bec, line: b.end.line - 1 }, start: { column: bsc, line: b.start.line - 1 } }]\n        cEditor.setSelections(c.concat(a))\n      }\n    });\n\n    app.commands.addCommand('codemirror:add-cursor-down', {\n      execute: () => {\n        const cEditor = (tracker.activeCell?.editor as CodeMirrorEditor);\n        var a = cEditor.getSelections();\n        var b = a.at(-1)\n        if (!b) return\n        var x = cEditor.getLine(b.end.line + 1)\n        var bec = (!x || x?.length >= b.end.column) ? b.end.column : x?.length\n        var bsc = (!x || x?.length >= b.start.column) ? b.start.column : x?.length\n        var c = [{ end: { column: bec, line: b.end.line + 1 }, start: { column: bsc, line: b.start.line + 1 } }]\n        cEditor.setSelections(c.concat(a))\n      }\n    });\n\n    app.commands.addCommand('codemirror:add-cursor-for-each-line', {\n      execute: () => {\n        const cEditor = (tracker.activeCell?.editor as CodeMirrorEditor);\n        var a = cEditor.getSelection();\n        var c = []\n        for (let i = a.start.line; i <= a.end.line; i++)\n          c.push({ end: { column: 0, line: i }, start: { column: 0, line: i } })\n        cEditor.setSelections(c)\n        cEditor.execCommand(f.selectLineBoundaryForward)\n      }\n    });\n\n    // // wtf1: string\n    app.commands.addCommand('codemirror:cursorMatchingBracket', {\n      execute: () => {\n        const cEditor = (tracker.activeCell?.editor as CodeMirrorEditor);\n        let wtf = cEditor.doc\n        let sel = cEditor.getSelection()\n        let offset = cEditor.getOffsetAt(sel.start)\n        var a = wtf.sliceString(offset, offset + 1)\n        if (a == ')' || a == ']' || a == '}')\n          cEditor.execCommand(f.cursorMatchingBracket)\n        else {\n          var hit = 1\n          while (offset >= 1) {\n            var a = wtf.sliceString(offset - 1, offset)\n            if (a == '(' || a == '[' || a == '{') hit -= 1\n            else if (a == ')' || a == ']' || a == '}') hit += 1\n            if (hit == 0) break\n            offset -= 1\n            cEditor.execCommand(f.cursorCharLeft)\n          }\n          cEditor.execCommand(f.cursorMatchingBracket)\n        }\n      }\n    });\n    app.commands.addCommand('codemirror:selectMatchingBracket', {\n      execute: () => {\n        const cEditor = (tracker.activeCell?.editor as CodeMirrorEditor);\n        let doc = cEditor.doc\n        let sel = cEditor.getSelection()\n        stack.push([sel])\n        let offset = cEditor.getOffsetAt(sel.start)\n        if (sel.start.column != sel.end.column && offset >= 1)\n          offset -= 1\n        var hit = 1\n        while (offset >= 1) {\n          var a = doc.sliceString(offset - 1, offset)\n          if (a == '(' || a == '[' || a == '{') hit -= 1\n          else if (a == ')' || a == ']' || a == '}') hit += 1\n          if (hit == 0) break\n          offset -= 1\n        }\n        cEditor.setCursorPosition(cEditor.getPositionAt(offset))\n        cEditor.execCommand(f.selectMatchingBracket)\n      }\n    });\n    app.commands.addCommand('codemirror:selectString', {\n      execute: () => {\n        const cEditor = (tracker.activeCell?.editor as CodeMirrorEditor);\n        let doc = cEditor.doc\n        let sel = cEditor.getSelection()\n        stack.push([sel])\n        let offset = cEditor.getOffsetAt(sel.start)\n        while (offset >= 1) {\n          var a = doc.sliceString(offset - 1, offset)\n          if (a == '\"' || a == \"'\") break\n          offset -= 1\n        }\n        let offset2 = cEditor.getOffsetAt(sel.start) + 1\n        while (offset2 < doc.length) {\n          var a = doc.sliceString(offset2 - 1, offset2)\n          if (a == '\"' || a == \"'\") break\n          offset2 += 1\n        }\n        cEditor.setSelections([{ start: cEditor.getPositionAt(offset), end: cEditor.getPositionAt(offset2 - 1) }])\n      }\n    });\n\n    // wtf: undo bracket selection\n    // TODO: add another redo stack\n    app.commands.addCommand('codemirror:undoSelection', {\n      execute: () => {\n        const cEditor = (tracker.activeCell?.editor as CodeMirrorEditor);\n        // while (true) {\n        var poped = stack.pop()\n        if (!poped) return\n        // var cur = cEditor.getSelections()\n        // if (cur.length!=poped.length )\n        // if (poped.start.column != cur.start.column || poped.end.column != cur.end.column) {\n        cEditor.setSelections(poped)\n        // break\n        // }\n        // }\n      }\n    });\n\n    app.commands.addCommand('codemirror:deleteSubwordLeft', {\n      execute: () => {\n        const cEditor = (tracker.activeCell?.editor as CodeMirrorEditor);\n        cEditor.execCommand(f.selectSubwordBackward)\n        cEditor.execCommand(f.deleteCharBackward)\n      }\n    });\n\n    app.commands.addCommand('codemirror:deleteSubwordRight', {\n      execute: () => {\n        const cEditor = (tracker.activeCell?.editor as CodeMirrorEditor);\n        cEditor.execCommand(f.selectSubwordForward)\n        cEditor.execCommand(f.deleteCharBackward)\n      }\n    });\n\n\n\n\n  }\n};\n\nexport default plugin;\n"],"names":[],"sourceRoot":""}