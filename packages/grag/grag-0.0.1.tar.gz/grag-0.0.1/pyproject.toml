[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "grag"
dynamic = ["version"]
description = 'A simple package for implementing RAG'
readme = "README.md"
requires-python = ">=3.10"
license = { file = 'LICENSE' }
keywords = ["RAG", "Retrieval Augmented Generation", "LLM", "retrieval", "quantization"]
authors = [
    { name = "Arjun Bingly", email = "arjunbin@gmail.com" },
    { name = "Sanchit Vijay", email = "sanchitvj1026@gmail.com" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Environment :: GPU :: NVIDIA CUDA :: 12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence"
]
dependencies = [
    "langchain>=0.1.5",
    "chromadb>=0.4.13",
    "torch>=2.2.0",
    "transformers>=4.37.1",
    "sentence-transformers==2.2.2",
    "instructorembedding>=1.0.1",
    "streamlit>=1.31.1",
    "unstructured[pdf]>=0.12.3",
    "pdfplumber>=0.10.3",
    "llama-cpp-python>=0.2.43",
    "tqdm>=4.65.0",
    "huggingface_hub>=0.20.2",
    "pydantic>=2.5.0",
    "rouge-score>=0.1.2",
    "deeplake>=3.8.27",
    "bitsandbytes>=0.42.0",
    "accelerate>=0.28.0",
    "poppler-utils>=0.1.0",
    "tesseract>=0.1.3",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "mypy",
    "ruff",
    "sphinx",
    "pydata-sphinx-theme",
    "sphinx-gallery",
]

[project.urls]
Documentation = "https://g-rag.org/"
Issues = "https://github.com/arjbingly/grag/issues"
Repository = "https://github.com/arjbingly/grag.git"

[tool.hatch.version]
path = "src/grag/__about__.py"

[tool.hatch.envs.default]
dependencies = [
    "coverage[toml]>=6.5",
    "pytest",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
    "- coverage combine",
    "coverage report",
]
cov = [
    "test-cov",
    "cov-report",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.types]
dependencies = [
    "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/grag tests}"

[tool.coverage.run]
source_pkgs = ["grag", "tests"]
branch = true
parallel = true
omit = [
    "src/grag/__about__.py",
]

[tool.coverage.paths]
grag = ["src/grag", "*/grag/src/grag"]
tests = ["tests", "*/grag/tests"]

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.ruff]
line-length = 88
indent-width = 4
extend-exclude = ["tests", "others", "docs", "ci"]

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "I", "D"]
ignore = ["D104"]
exclude = ["__about__.py"]

[tool.ruff.lint.per-file-ignores]
"**/cookbook/*" = ["D205", "D415"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
ignore_missing_imports = true
exclude = ['src/docs', 'docs', 'src/tests', 'tests']
