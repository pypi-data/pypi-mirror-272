# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic.v1 as pydantic

from ...core.datetime_utils import serialize_datetime
from ...pagination.types.paginated_response import PaginatedResponse
from .analysis_template import AnalysisTemplate


class PaginatedAnalysisTemplates(PaginatedResponse):
    """
    Examples
    --------
    import datetime

    from sphinxbio import AnalysisTemplate, PaginatedAnalysisTemplates
    from sphinxbio.shared import Creator

    PaginatedAnalysisTemplates(
        data=[
            AnalysisTemplate(
                creator=Creator(
                    id="user_67890",
                    email="researcher@example.com",
                ),
                created_at=datetime.datetime.fromisoformat(
                    "2023-01-01 12:00:00+00:00",
                ),
                id="nbtemp_12345",
                name="qPCR Assay Template",
                updated_at=datetime.datetime.fromisoformat(
                    "2023-01-02 12:00:00+00:00",
                ),
            )
        ],
        next_token="bmV4dF90b2tlbl9mb3Jfbm90ZWJvb2tfdGVtcGxhdGVz",
        url="https://api.sphinxbio.com/v1/analysis-templates",
    )
    """

    data: typing.List[AnalysisTemplate]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        populate_by_name = True
        extra = pydantic.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
