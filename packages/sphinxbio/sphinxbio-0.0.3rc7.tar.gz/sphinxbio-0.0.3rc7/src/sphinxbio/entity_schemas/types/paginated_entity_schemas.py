# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic.v1 as pydantic

from ...core.datetime_utils import serialize_datetime
from ...pagination.types.paginated_response import PaginatedResponse
from .entity_schema import EntitySchema


class PaginatedEntitySchemas(PaginatedResponse):
    """
    Examples
    --------
    from sphinxbio import EntitySchema, PaginatedEntitySchemas

    PaginatedEntitySchemas(
        data=[
            EntitySchema(
                id="entsch_67890",
                name="Plasmid",
                version="0",
                campaign_id="camp_12345",
            )
        ],
        next_token="bmV4dF90b2tlbl9mb3JfZGF0YXNldF9zY2hlbWFz",
        url="https://api.sphinxbio.com/v1/Entity-schemas",
    )
    """

    data: typing.List[EntitySchema]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        populate_by_name = True
        extra = pydantic.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
