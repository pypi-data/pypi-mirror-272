# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic.v1 as pydantic

from ....core.datetime_utils import serialize_datetime
from .dataset_creator_summary import DatasetCreatorSummary


class DatasetBase(pydantic.BaseModel):
    campaign_id: str
    creator: typing.Optional[DatasetCreatorSummary] = None
    created_at: dt.datetime
    description: typing.Optional[str] = None
    eln_link: typing.Optional[str] = pydantic.Field(alias="elnLink", default=None)
    id: str
    mimetype: typing.Optional[str] = None
    name: str
    size: int
    tags: typing.List[str]
    updated_at: typing.Optional[dt.datetime] = None

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        populate_by_name = True
        extra = pydantic.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
