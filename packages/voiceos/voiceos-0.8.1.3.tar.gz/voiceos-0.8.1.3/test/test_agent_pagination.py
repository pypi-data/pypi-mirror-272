# coding: utf-8

"""
    VoiceOS

    VoiceOS API

    The version of the OpenAPI document: 0.8.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from voiceos.models.agent_pagination import AgentPagination

class TestAgentPagination(unittest.TestCase):
    """AgentPagination unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AgentPagination:
        """Test AgentPagination
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AgentPagination`
        """
        model = AgentPagination()
        if include_optional:
            return AgentPagination(
                items = [
                    voiceos.models.agent_response.AgentResponse(
                        initial_message = '', 
                        prompt = '', 
                        voice = null, 
                        language_model = null, 
                        transcriber = null, 
                        max_duration_seconds = 56, 
                        webhooks = [
                            voiceos.models.webhook.Webhook(
                                events = [
                                    'phone_call:connection_requested'
                                    ], 
                                url = '', 
                                method = null, 
                                headers = {
                                    'key' : ''
                                    }, 
                                filter = '', )
                            ], 
                        metadata = {
                            'key' : ''
                            }, 
                        uri = '', 
                        account_id = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        id = '', )
                    ],
                index = 56,
                has_more = True
            )
        else:
            return AgentPagination(
                items = [
                    voiceos.models.agent_response.AgentResponse(
                        initial_message = '', 
                        prompt = '', 
                        voice = null, 
                        language_model = null, 
                        transcriber = null, 
                        max_duration_seconds = 56, 
                        webhooks = [
                            voiceos.models.webhook.Webhook(
                                events = [
                                    'phone_call:connection_requested'
                                    ], 
                                url = '', 
                                method = null, 
                                headers = {
                                    'key' : ''
                                    }, 
                                filter = '', )
                            ], 
                        metadata = {
                            'key' : ''
                            }, 
                        uri = '', 
                        account_id = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        id = '', )
                    ],
                index = 56,
                has_more = True,
        )
        """

    def testAgentPagination(self):
        """Test AgentPagination"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
