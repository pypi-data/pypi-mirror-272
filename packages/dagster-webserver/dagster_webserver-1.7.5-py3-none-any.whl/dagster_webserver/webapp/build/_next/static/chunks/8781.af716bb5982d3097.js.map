{"version":3,"file":"static/chunks/8781.af716bb5982d3097.js","mappings":"yQAoBaA,EAAiBC,CAAAA,EAAAA,EAAAA,IAAAA,EAC5B,SAAAC,CAAA,MAiBUC,EAjBRC,EAAAA,EAAAA,IAAAA,CAAMC,EAAAA,EAAAA,GAAAA,CAAAA,EAAAA,EAAKC,SAAAA,CAAYC,EAAAL,EAAOM,UAAAA,CAAaC,EAAAP,EAAMQ,WAAAA,CAAAA,EAAAA,KAAAA,IAAAA,GAAcD,EACzDE,EAAWN,EAAVM,MAAAA,CAEDC,EAASC,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,WACrB,OAAQF,GACN,KAAKG,EAAAA,GAASA,CAACC,OAAO,CACpB,MAAO,SACT,MAAKD,EAAAA,GAASA,CAACE,QAAQ,CACvB,KAAKF,EAAAA,GAASA,CAACG,SAAS,CACxB,KAAKH,EAAAA,GAASA,CAACI,OAAO,CACpB,MAAO,QACT,SACE,MAAO,MACX,CACF,EAAG,CAACP,EAAO,EAgCX,MACE,GAAAQ,EAAAC,IAAA,EAACC,EAAAA,CAAGA,CAAAA,CACFC,KAAM,CACJC,UAAW,MACXC,eAAgB,gBAChBC,WAAY,aACZC,IAAK,EACP,YAEA,GAAAP,EAAAC,IAAA,EAACC,EAAAA,CAAGA,CAAAA,CAACC,KAAM,CAACC,UAAW,SAAUE,WAAY,aAAcC,IAAK,CAAC,YAC/D,GAAAP,EAAAC,IAAA,EAACC,EAAAA,CAAGA,CAAAA,CAACC,KAAM,CAACC,UAAW,MAAOE,WAAY,SAAUC,IAAK,CAAC,aAvCxDvB,EACJ,GAAAgB,EAAAQ,GAAA,EAACC,EAAAA,CAAGA,CAAAA,CAAChB,OAAQA,WACX,GAAAO,EAAAC,IAAA,EAACC,EAAAA,CAAGA,CAAAA,CAACC,KAAM,CAACC,UAAW,MAAOE,WAAY,SAAUC,IAAK,CAAC,YACxD,GAAAP,EAAAQ,GAAA,EAACE,EAAAA,EAAkBA,CAAAA,CAAClB,OAAQN,EAAIM,MAAM,CAAEmB,KAAM,KAC9C,GAAAX,EAAAQ,GAAA,EAACI,EAAAA,EAAOA,CAAAA,CAAC1B,IAAKA,SAKpB,KA1BSC,IAAAA,GAAY0B,EA+BnB,GAAAb,EAAAQ,GAAA,EAACM,EAAAA,CAAOA,CAAAA,CACNC,SAAS,MACTC,gBAAgB,QAChBC,QACE,GAAAjB,EAAAQ,GAAA,EAACU,MAAAA,UACC,GAAAlB,EAAAQ,GAAA,EAACW,EAAAA,EAAgBA,CAAAA,CAACjC,IAAKA,EAAKD,KAAMA,MAGtCmC,eAAgB,aAEfpC,IAdIA,GA+BFO,EAAc,GAAAS,EAAAQ,GAAA,EAACa,EAAAA,EAAeA,CAAAA,CAACnC,IAAKA,IAAU,QAEhDK,GAAgB+B,CAAAA,EAAAA,EAAcA,CAACC,GAAG,CAACrC,EAAIM,MAAM,GAAKgC,EAAAA,EAAkBA,CAACD,GAAG,CAACrC,EAAIM,MAAM,GAClF,GAAAQ,EAAAQ,GAAA,EAACiB,EAAAA,CAAiBA,CAAAA,CAACC,MAAOxC,EAAIyC,EAAE,GAC9BC,KAAAA,KAELvC,KAhEyBA,IAAAA,GAAaD,EAgEzB,GAAAY,EAAAQ,GAAA,EAACqB,EAAAA,CAAYA,CAAAA,CAACC,GAAI,SAAgBC,MAAA,CAAP7C,EAAIyC,EAAE,WAAI,aAA0B,OAGnF,kiBCvEK,IAAMF,kBAAoB,SAACO,CAAAA,EAChC,IAAMN,EAAUM,EAATN,KAAAA,CACDO,EAASC,CAAAA,EAAAA,EAAAA,CAAAA,EACbC,EACA,CACEC,UAAW,CAACV,MAAAA,CAAK,CACnB,GAJKO,IAAAA,CAOD/C,EAAM+C,MAAAA,EAAAA,KAAAA,EAAAA,EAAMI,kBAAkB,CAC9B7C,EAASN,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAKoD,UAAU,IAAK,MAAQpD,EAAIM,MAAM,CAAG,KAElD+C,EAAgB7C,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,WAC5B,GAAIR,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAKoD,UAAU,IAAK,MACtB,MAAO,EAAE,CAGX,IAAM9C,EAAWN,EAAVM,MAAAA,QACP,EAAI8B,EAAcA,CAACC,GAAG,CAAC/B,GACdN,EAAIsD,SAAS,CAACC,MAAM,CAAC,SAACC,CAAAA,SAASA,EAAKlD,MAAM,GAAKmD,EAAAA,GAAeA,CAAC5C,OAAO,GAG3EyB,EAAAA,EAAkBA,CAACD,GAAG,CAAC/B,GAClBN,EAAIsD,SAAS,CAACC,MAAM,CAAC,SAACC,CAAAA,SAASA,EAAKlD,MAAM,GAAKmD,EAAAA,GAAeA,CAACC,WAAW,GAG5E,EAAE,EACR,CAAC1D,EAAI,EAEF2D,EAAYN,EAAcO,MAAM,CAEtC,GAAI,CAACD,GAAa,CAACrD,EACjB,OAAO,KAGT,GAAI8B,EAAAA,EAAcA,CAACC,GAAG,CAAC/B,GAAS,CAC9B,GAAIqD,IAAAA,EAAiB,CACnB,IAAMH,EAAOH,CAAa,CAAC,EAAE,CACvBQ,EAAQL,EAAKM,OAAO,CACtBC,IAAAA,SAAY,CAAC,CAACC,YAAaC,KAAKC,KAAK,CAACV,IAAAA,EAAKM,OAAO,CAAQ,EAAG,CAACK,eAAgB,EAAI,GAClF,GACJ,MACE,GAAAC,EAAArD,IAAA,EAACsD,EAAAA,EAAOA,CAAAA,CAACC,MAAOC,EAAAA,CAAgB,aAAI,aACxB,GAAAH,EAAA9C,GAAA,EAACkD,EAAAA,EAAIA,CAAAA,CAAC5B,GAAI,SAAiBiB,MAAAA,CAARrB,GAAcK,MAAA,CAANgB,YAAUL,EAAKiB,OAAO,KAGjE,CACA,MACE,GAAAL,EAAArD,IAAA,EAACsD,EAAAA,EAAOA,CAAAA,CAACC,MAAOC,EAAAA,CAAgB,aAAI,aACxB,GAAAH,EAAArD,IAAA,EAACyD,EAAAA,EAAIA,CAAAA,CAAC5B,GAAI,SAAeC,MAAA,CAANL,aAAUmB,EAAU,cAGvD,CAEA,GAAIrB,EAAAA,EAAkBA,CAACD,GAAG,CAAC/B,GAAS,CAClC,GAAIqD,IAAAA,EAAiB,CACnB,IAAMH,EAAOH,CAAa,CAAC,EAAE,CACvBQ,EAAQL,EAAKM,OAAO,CACtBC,IAAAA,SAAY,CAAC,CAACC,YAAaC,KAAKC,KAAK,CAACV,IAAAA,EAAKM,OAAO,CAAQ,EAAG,CAACK,eAAgB,EAAI,GAClF,GACJ,MACE,GAAAC,EAAArD,IAAA,EAACsD,EAAAA,EAAOA,CAAAA,CAACC,MAAOC,EAAAA,CAAgB,aAAI,kBACnB,GAAAH,EAAA9C,GAAA,EAACkD,EAAAA,EAAIA,CAAAA,CAAC5B,GAAI,SAAiBiB,MAAAA,CAARrB,GAAcK,MAAA,CAANgB,YAAUL,EAAKiB,OAAO,KAGtE,CACA,MACE,GAAAL,EAAArD,IAAA,EAACsD,EAAAA,EAAOA,CAAAA,CAACC,MAAOC,EAAAA,CAAgB,aAAI,kBACnB,GAAAH,EAAArD,IAAA,EAACyD,EAAAA,EAAIA,CAAAA,CAAC5B,GAAI,SAAeC,MAAA,CAANL,aAAUmB,EAAU,cAG5D,CAEA,OAAO,IACT,EAEMV,EAA6ByB,CAAAA,EAAAA,EAAAA,EAAAA,EAAGA,01CCvE/B,IAAMC,aAAe,SAAC7B,CAAAA,EAC3B,IAAOxC,EAAiCwC,EAAjCxC,MAAAA,CAAAA,EAAiCwC,EAAzB8B,OAAAA,CACTN,EAAQO,EAAAA,EAAiB,CAACvE,EAAO,CAEvC,MAAO,GAAA8D,EAAA9C,GAAA,EAACwD,EAAAA,CAAIC,OAAQT,EAAOU,SAHZJ,KAAAA,IAAAA,EAVG,EAUOK,GAI3B,EAQaC,iBAAmB,SAACpC,CAAAA,EAC/B,IAAOqC,EAAuBrC,EAAvBqC,IAAAA,CAAMC,EAAiBtC,EAAjBsC,OAAAA,CAASC,EAAQvC,EAARuC,IAAAA,CAChBC,EAAQD,EAAKzB,MAAM,CAEnBJ,EAAO,GADQS,KAAKsB,GAAG,CAxBL,EAwByBD,GAEjD,MACE,GAAAlB,EAAA9C,GAAA,EAACN,EAAAA,CAAGA,CAAAA,CAACC,KAAM,CAACC,UAAW,MAAOE,WAAY,SAAUC,IAAK,CAAC,WACvDgE,EAAKG,GAAG,CAAC,SAACxF,CAAAA,CAAKyF,CAAAA,QACd,GAAArB,EAAA9C,GAAA,EAACM,EAAAA,CAAOA,CAAAA,CAENC,SAAS,MACTC,gBAAgB,QAChBC,QACE,GAAAqC,EAAA9C,GAAA,EAACU,MAAAA,UACC,GAAAoC,EAAA9C,GAAA,EAACW,iBAAAA,CAAiBjC,IAAKA,EAAKD,KAAMqF,MAGtClD,eAAgB,aAEhB,GAAAkC,EAAA9C,GAAA,EAACqD,aAAAA,CAECnC,MAAOxC,EAAIyC,EAAE,CACbnC,OAAQN,EAAIM,MAAM,CAClBsE,QAASO,EAAOF,EAAc,CAACK,EAAQG,EAAK,GAAKjC,EAAO,GAHnDxD,EAAIyC,EAAE,GAXRzC,EAAIyC,EAAE,KAoBrB,EAOaR,iBAAmB,SAAApC,CAAA,MAAEE,EAAAA,EAAAA,IAAAA,CAAMC,EAAAA,EAAAA,GAAAA,CACtC,MACE,GAAAoE,EAAArD,IAAA,EAAC2E,EAAAA,WACC,GAAAtB,EAAA9C,GAAA,EAACqE,EAAAA,UAAc5F,IACf,GAAAqE,EAAArD,IAAA,EAAC6E,EAAAA,WACC,GAAAxB,EAAArD,IAAA,EAACC,EAAAA,CAAGA,CAAAA,CAACC,KAAM,CAACG,WAAY,SAAUF,UAAW,MAAOG,IAAK,CAAC,YACxD,GAAA+C,EAAA9C,GAAA,EAACE,EAAAA,EAAkBA,CAAAA,CAAClB,OAAQN,EAAIM,MAAM,GACtC,GAAA8D,EAAA9C,GAAA,EAACkD,EAAAA,EAAIA,CAAAA,CAAC5B,GAAI,SAAgBC,MAAA,CAAP7C,EAAIyC,EAAE,WACvB,GAAA2B,EAAA9C,GAAA,EAACuE,EAAAA,EAAWA,CAAAA,UAAEC,CAAAA,EAAAA,EAAAA,EAAAA,EAAY9F,UAG9B,GAAAoE,EAAArD,IAAA,EAACC,EAAAA,CAAGA,CAAAA,CAACC,KAAM,CAACC,UAAW,SAAUG,IAAK,CAAC,YACrC,GAAA+C,EAAA9C,GAAA,EAACI,EAAAA,EAAOA,CAAAA,CAAC1B,IAAKA,IACd,GAAAoE,EAAA9C,GAAA,EAACa,EAAAA,EAAeA,CAAAA,CAACnC,IAAKA,UAGzBoC,EAAAA,EAAcA,CAACC,GAAG,CAACrC,EAAIM,MAAM,GAAKgC,EAAAA,EAAkBA,CAACD,GAAG,CAACrC,EAAIM,MAAM,EAClE,GAAA8D,EAAA9C,GAAA,EAACyE,EAAAA,UACC,GAAA3B,EAAA9C,GAAA,EAACiB,EAAAA,CAAiBA,CAAAA,CAACC,MAAOxC,EAAIyC,EAAE,KAEhC,OAGV,EAEMiD,EAAmBM,EAAAA,EAAMA,CAAChE,GAAG,CAAAiE,UAAA,mDAM7BN,EAAeK,EAAAA,EAAMA,CAAChE,GAAG,CAAAiE,UAAA,mDAEF1B,EAAAA,EAAqB,GACjC2B,EAAAA,CAAUA,CAACC,OAAO,CAGxB5B,EAAAA,EAAkB,IAOvBqB,EAASI,EAAAA,EAAMA,CAAChE,GAAG,CAAAiE,UAAA,oDAOnBF,EAAmBC,EAAAA,EAAMA,CAAChE,GAAG,CAAAiE,UAAA,oDAW7BnB,EAAMkB,EAAAA,EAAMA,CAAChE,GAAG,CAAAiE,UAAA,mDACA,SAAApG,CAAA,SAAEkF,EAAAA,MAAAA,EAGX,SAAAlF,CAAA,SAAEmF,EAAAA,QAAAA,+rBCtIR,IAAMoB,EAAwB,GASxBC,mBAAqB,SAACvD,CAAAA,EACjC,IAAOwD,EAA6CxD,EAA7CwD,QAAAA,CAAUC,EAAmCzD,EAAnCyD,OAAAA,CAASC,EAA0B1D,EAA1B0D,QAAAA,CAAUC,EAAgB3D,EAAhB2D,YAAAA,CACpC,MACE,GAAArC,EAAA9C,GAAA,EAACoF,EAAAA,CAAoBC,MAAOL,EAAUC,QAASA,WAC7C,GAAAnC,EAAArD,IAAA,EAACC,EAAAA,CAAGA,CAAAA,CACFC,KAAM,CAACG,WAAY,SAAUD,eAAgB,eAAe,EAC5DyF,QAAS,CAACC,WAAY,EAAE,YAEvBL,EACD,GAAApC,EAAArD,IAAA,EAACC,EAAAA,CAAGA,CAAAA,CAACC,KAAM,CAACG,WAAY,SAAUC,IAAK,CAAC,YACrCoF,EACD,GAAArC,EAAA9C,GAAA,EAACN,EAAAA,CAAGA,CAAAA,CAAC8F,OAAQ,CAACC,IAAK,CAAC,WAClB,GAAA3C,EAAA9C,GAAA,EAAC0F,EAAAA,EAAIA,CAAAA,CAACjH,KAAK,6BAMvB,EAEM2G,EAAsBV,EAAAA,EAAMA,CAACiB,MAAM,CAAAhB,UAAA,kDACnB1B,EAAAA,EAAsB,GAGrBA,EAAAA,EAAqB,GACtBA,EAAAA,EAAqB,GAChCA,EAAAA,CAAgB,GAMf6B,EASY7B,EAAAA,EAA2B,GAG/C2C,EAAAA,EAAWA,CAET,SAAArH,CAAA,SAAc8G,EAAZA,KAAAA,CAAoB,KAAQ,qlBC7C7B,IAAMQ,kBAAoB,SAACrE,CAAAA,EAChC,IAAOsE,EAAiDtE,EAAjDsE,QAAAA,CAAUC,EAAuCvE,EAAvCuE,YAAAA,CAAcC,EAAyBxE,EAAzBwE,YAAAA,CAAiBC,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAQzE,EAAAA,CAAjDsE,WAAUC,eAAcC,iBACzBE,EAAmBJ,IAAaK,EAAAA,EAAgBA,CACtD,MACE,GAAAC,EAAApG,GAAA,EAAC+E,EAAAA,CAAkBA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAKkB,GAAAA,UACtB,GAAAG,EAAA3G,IAAA,EAACC,EAAAA,CAAGA,CAAAA,CAACC,KAAM,CAACG,WAAY,SAAUC,IAAK,CAAC,YACtC,GAAAqG,EAAApG,GAAA,EAAC0F,EAAAA,EAAIA,CAAAA,CAACjH,KAAK,SAASuE,MAAOC,EAAAA,EAAiB,KAC5C,GAAAmD,EAAA3G,IAAA,EAACiB,MAAAA,WACC,GAAA0F,EAAApG,GAAA,EAACqG,EAAAA,UAAUH,EAAmBH,EAAeD,IAC5CE,GAAgB,CAACE,EAChB,GAAAE,EAAApG,GAAA,EAACsG,EAAAA,UAAc,IAAiB/E,MAAA,CAAbwE,KACjB,aAKd,EAEMM,EAAW3B,EAAAA,EAAMA,CAAC6B,IAAI,CAAA5B,UAAA,kDAItB2B,EAAe5B,EAAAA,EAAMA,CAAC6B,IAAI,CAAA5B,UAAA,kDAErB1B,EAAAA,EAAkB,gSC5BtB,IAAMuD,QAAU,SAAAjI,CAAA,MACrBkI,EAAAA,EAAAA,WAAAA,CACAC,EAAAA,EAAAA,MAAAA,CACAC,EAAAA,EAAAA,KAAAA,CACA3B,EAAAA,EAAAA,QAAAA,CACA4B,EAAAA,EAAAA,QAAAA,CACAC,EAAAA,EAAAA,WAAAA,CACAb,EAAAA,EAAAA,YAAAA,CACAb,EAAAA,EAAAA,YAAAA,CAWA,MACE,GAAAiB,EAAApG,GAAA,EAAC8G,EAAAA,EAAGA,CAAAA,CAACC,QAASL,EAAQM,OAAQL,WAC5B,GAAAP,EAAApG,GAAA,EAAC6F,kBAAiBA,CAChBC,SAAUW,EAAYhI,IAAI,CAC1BsH,aAAcU,EAAYQ,QAAQ,CAClCjC,SAAUA,EACVC,QAAS,SAACiC,CAAAA,SACRA,EAAEC,gBAAgB,CAAC,SAAWN,EAAY,CAAC7B,GAAY4B,EAASH,IAElET,aAAcA,EACdb,aAAcA,KAItB,EAEaiC,cAAgB,SAAA7I,CAAA,MAC3B8I,EAAAA,EAAAA,WAAAA,CAAAA,EAAAA,EACAC,UAAAA,CAKOC,EAAyBF,EAAzBE,MAAAA,CAAQC,EAAiBH,EAAjBG,OAAAA,CAAS/F,EAAQ4F,EAAR5F,IAAAA,CACxB,MACE,GAAA2E,EAAApG,GAAA,EAACU,MAAAA,CAAI+G,MAAO,CAACzE,MAAOC,EAAAA,CAAgB,EAAE,WACnC,GAAYuE,CAAAA,CAAAA,GAAY/F,CAAAA,EAR7B6F,KAAAA,IAAAA,EAAa,OAAAI,EAQwB,WAGvC,EAEaC,YAAc,SAAApJ,CAAA,MAAE2G,EAAAA,EAAAA,QAAAA,CAC3B,MACE,GAAAkB,EAAApG,GAAA,EAAC4H,EAAAA,UACC,GAAAxB,EAAApG,GAAA,EAAC+C,EAAAA,EAAOA,CAAAA,UAAEmC,KAGhB,EAEM0C,EAAuBlD,EAAAA,EAAMA,CAAChE,GAAG,CAAAiE,UAAA,2EAKnC5B,EAAAA,EAAOA,CACEE,EAAAA,CAAgB,IAOhB4E,mBAAqB,SAACC,CAAAA,EACjCC,EAAAA,SAAe,CAAC,WACd,IAAMC,EAAQC,WAAW,WACvBH,GACF,EANoB,KAQpB,OAAO,WACLI,aAAaF,EACf,CACF,EAAG,CAACF,EAAY,CAClB","sources":["webpack://_N_E/../ui-core/src/instance/LastRunSummary.tsx","webpack://_N_E/../ui-core/src/instance/StepSummaryForRun.tsx","webpack://_N_E/../ui-core/src/runs/RunStatusPez.tsx","webpack://_N_E/../ui-core/src/workspace/TableSectionHeader.tsx","webpack://_N_E/../ui-core/src/runs/RepoSectionHeader.tsx","webpack://_N_E/../ui-core/src/workspace/VirtualizedWorkspaceTable.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import {Box, Popover, Tag} from '@dagster-io/ui-components';\nimport {memo, useMemo} from 'react';\n\nimport {StepSummaryForRun} from './StepSummaryForRun';\nimport {RunStatus} from '../graphql/types';\nimport {RunStatusIndicator} from '../runs/RunStatusDots';\nimport {RunStatusOverlay} from '../runs/RunStatusPez';\nimport {failedStatuses, inProgressStatuses} from '../runs/RunStatuses';\nimport {RunStateSummary, RunTime} from '../runs/RunUtils';\nimport {RunTimeFragment} from '../runs/types/RunUtils.types';\nimport {AnchorButton} from '../ui/AnchorButton';\n\ninterface Props {\n  name: string;\n  run: RunTimeFragment;\n  showHover?: boolean;\n  showButton?: boolean;\n  showSummary?: boolean;\n}\n\nexport const LastRunSummary = memo(\n  ({name, run, showHover = false, showButton = true, showSummary = true}: Props) => {\n    const {status} = run;\n\n    const intent = useMemo(() => {\n      switch (status) {\n        case RunStatus.SUCCESS:\n          return 'success';\n        case RunStatus.CANCELED:\n        case RunStatus.CANCELING:\n        case RunStatus.FAILURE:\n          return 'danger';\n        default:\n          return 'none';\n      }\n    }, [status]);\n\n    const tag = () => {\n      const tagElement = (\n        <Tag intent={intent}>\n          <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n            <RunStatusIndicator status={run.status} size={10} />\n            <RunTime run={run} />\n          </Box>\n        </Tag>\n      );\n\n      if (!showHover) {\n        return tagElement;\n      }\n\n      return (\n        <Popover\n          position=\"top\"\n          interactionKind=\"hover\"\n          content={\n            <div>\n              <RunStatusOverlay run={run} name={name} />\n            </div>\n          }\n          hoverOpenDelay={100}\n        >\n          {tagElement}\n        </Popover>\n      );\n    };\n\n    return (\n      <Box\n        flex={{\n          direction: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'flex-start',\n          gap: 16,\n        }}\n      >\n        <Box flex={{direction: 'column', alignItems: 'flex-start', gap: 4}}>\n          <Box flex={{direction: 'row', alignItems: 'center', gap: 8}}>\n            {tag()}\n            {showSummary ? <RunStateSummary run={run} /> : null}\n          </Box>\n          {showSummary && (failedStatuses.has(run.status) || inProgressStatuses.has(run.status)) ? (\n            <StepSummaryForRun runId={run.id} />\n          ) : undefined}\n        </Box>\n        {showButton ? <AnchorButton to={`/runs/${run.id}`}>View run</AnchorButton> : null}\n      </Box>\n    );\n  },\n);\n","import {gql, useQuery} from '@apollo/client';\nimport {Caption, Colors} from '@dagster-io/ui-components';\nimport qs from 'qs';\nimport {useMemo} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {\n  StepSummaryForRunQuery,\n  StepSummaryForRunQueryVariables,\n} from './types/StepSummaryForRun.types';\nimport {StepEventStatus} from '../graphql/types';\nimport {failedStatuses, inProgressStatuses} from '../runs/RunStatuses';\n\ninterface Props {\n  runId: string;\n}\n\nexport const StepSummaryForRun = (props: Props) => {\n  const {runId} = props;\n  const {data} = useQuery<StepSummaryForRunQuery, StepSummaryForRunQueryVariables>(\n    STEP_SUMMARY_FOR_RUN_QUERY,\n    {\n      variables: {runId},\n    },\n  );\n\n  const run = data?.pipelineRunOrError;\n  const status = run?.__typename === 'Run' ? run.status : null;\n\n  const relevantSteps = useMemo(() => {\n    if (run?.__typename !== 'Run') {\n      return [];\n    }\n\n    const {status} = run;\n    if (failedStatuses.has(status)) {\n      return run.stepStats.filter((step) => step.status === StepEventStatus.FAILURE);\n    }\n\n    if (inProgressStatuses.has(status)) {\n      return run.stepStats.filter((step) => step.status === StepEventStatus.IN_PROGRESS);\n    }\n\n    return [];\n  }, [run]);\n\n  const stepCount = relevantSteps.length;\n\n  if (!stepCount || !status) {\n    return null;\n  }\n\n  if (failedStatuses.has(status)) {\n    if (stepCount === 1) {\n      const step = relevantSteps[0]!;\n      const query = step.endTime\n        ? qs.stringify({focusedTime: Math.floor(step.endTime * 1000)}, {addQueryPrefix: true})\n        : '';\n      return (\n        <Caption color={Colors.textLight()}>\n          Failed at <Link to={`/runs/${runId}${query}`}>{step.stepKey}</Link>\n        </Caption>\n      );\n    }\n    return (\n      <Caption color={Colors.textLight()}>\n        Failed at <Link to={`/runs/${runId}`}>{stepCount} steps</Link>\n      </Caption>\n    );\n  }\n\n  if (inProgressStatuses.has(status)) {\n    if (stepCount === 1) {\n      const step = relevantSteps[0]!;\n      const query = step.endTime\n        ? qs.stringify({focusedTime: Math.floor(step.endTime * 1000)}, {addQueryPrefix: true})\n        : '';\n      return (\n        <Caption color={Colors.textLight()}>\n          In progress at <Link to={`/runs/${runId}${query}`}>{step.stepKey}</Link>\n        </Caption>\n      );\n    }\n    return (\n      <Caption color={Colors.textLight()}>\n        In progress at <Link to={`/runs/${runId}`}>{stepCount} steps</Link>\n      </Caption>\n    );\n  }\n\n  return null;\n};\n\nconst STEP_SUMMARY_FOR_RUN_QUERY = gql`\n  query StepSummaryForRunQuery($runId: ID!) {\n    pipelineRunOrError(runId: $runId) {\n      ... on Run {\n        id\n        status\n        stepStats {\n          endTime\n          stepKey\n          status\n        }\n      }\n    }\n  }\n`;\n","import {Box, CaptionMono, Colors, FontFamily, Popover} from '@dagster-io/ui-components';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {RunStatusIndicator} from './RunStatusDots';\nimport {RUN_STATUS_COLORS} from './RunStatusTag';\nimport {failedStatuses, inProgressStatuses} from './RunStatuses';\nimport {RunStateSummary, RunTime, titleForRun} from './RunUtils';\nimport {RunTimeFragment} from './types/RunUtils.types';\nimport {RunStatus} from '../graphql/types';\nimport {StepSummaryForRun} from '../instance/StepSummaryForRun';\n\nconst MIN_OPACITY = 0.2;\nconst MAX_OPACITY = 1.0;\nconst MIN_OPACITY_STEPS = 3;\n\ninterface Props {\n  opacity?: number;\n  runId: string;\n  status: RunStatus;\n}\n\nexport const RunStatusPez = (props: Props) => {\n  const {status, opacity = MAX_OPACITY} = props;\n  const color = RUN_STATUS_COLORS[status];\n\n  return <Pez $color={color} $opacity={opacity} />;\n};\n\ninterface ListProps {\n  fade: boolean;\n  jobName: string;\n  runs: RunTimeFragment[];\n}\n\nexport const RunStatusPezList = (props: ListProps) => {\n  const {fade, jobName, runs} = props;\n  const count = runs.length;\n  const countForStep = Math.max(MIN_OPACITY_STEPS, count);\n  const step = (MAX_OPACITY - MIN_OPACITY) / countForStep;\n  return (\n    <Box flex={{direction: 'row', alignItems: 'center', gap: 2}}>\n      {runs.map((run, ii) => (\n        <Popover\n          key={run.id}\n          position=\"top\"\n          interactionKind=\"hover\"\n          content={\n            <div>\n              <RunStatusOverlay run={run} name={jobName} />\n            </div>\n          }\n          hoverOpenDelay={100}\n        >\n          <RunStatusPez\n            key={run.id}\n            runId={run.id}\n            status={run.status}\n            opacity={fade ? MAX_OPACITY - (count - ii - 1) * step : 1.0}\n          />\n        </Popover>\n      ))}\n    </Box>\n  );\n};\n\ninterface OverlayProps {\n  run: RunTimeFragment;\n  name: string;\n}\n\nexport const RunStatusOverlay = ({name, run}: OverlayProps) => {\n  return (\n    <OverlayContainer>\n      <OverlayTitle>{name}</OverlayTitle>\n      <RunRow>\n        <Box flex={{alignItems: 'center', direction: 'row', gap: 8}}>\n          <RunStatusIndicator status={run.status} />\n          <Link to={`/runs/${run.id}`}>\n            <CaptionMono>{titleForRun(run)}</CaptionMono>\n          </Link>\n        </Box>\n        <Box flex={{direction: 'column', gap: 4}}>\n          <RunTime run={run} />\n          <RunStateSummary run={run} />\n        </Box>\n      </RunRow>\n      {failedStatuses.has(run.status) || inProgressStatuses.has(run.status) ? (\n        <SummaryContainer>\n          <StepSummaryForRun runId={run.id} />\n        </SummaryContainer>\n      ) : null}\n    </OverlayContainer>\n  );\n};\n\nconst OverlayContainer = styled.div`\n  padding: 4px;\n  font-size: 12px;\n  width: 220px;\n`;\n\nconst OverlayTitle = styled.div`\n  padding: 8px;\n  box-shadow: inset 0 -1px ${Colors.keylineDefault()};\n  font-family: ${FontFamily.default};\n  font-size: 14px;\n  font-weight: 500;\n  color: ${Colors.textDefault()};\n  max-width: 100%;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  min-width: 0px;\n`;\n\nconst RunRow = styled.div`\n  padding: 8px;\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n`;\n\nconst SummaryContainer = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  padding: 4px 8px 8px;\n\n  :empty {\n    display: none;\n  }\n`;\n\nconst Pez = styled.div<{$color: string; $opacity: number}>`\n  background-color: ${({$color}) => $color};\n  border-radius: 2px;\n  height: 16px;\n  opacity: ${({$opacity}) => $opacity};\n  width: 8px;\n`;\n","import {Box, Colors, Icon, IconWrapper} from '@dagster-io/ui-components';\nimport styled from 'styled-components';\n\nexport const SECTION_HEADER_HEIGHT = 32;\n\nexport interface TableSectionHeaderProps {\n  expanded: boolean;\n  onClick: (e: React.MouseEvent) => void;\n  children?: React.ReactNode;\n  rightElement?: React.ReactNode;\n}\n\nexport const TableSectionHeader = (props: TableSectionHeaderProps) => {\n  const {expanded, onClick, children, rightElement} = props;\n  return (\n    <SectionHeaderButton $open={expanded} onClick={onClick}>\n      <Box\n        flex={{alignItems: 'center', justifyContent: 'space-between'}}\n        padding={{horizontal: 24}}\n      >\n        {children}\n        <Box flex={{alignItems: 'center', gap: 8}}>\n          {rightElement}\n          <Box margin={{top: 2}}>\n            <Icon name=\"arrow_drop_down\" />\n          </Box>\n        </Box>\n      </Box>\n    </SectionHeaderButton>\n  );\n};\n\nconst SectionHeaderButton = styled.button<{$open: boolean}>`\n  background-color: ${Colors.backgroundLight()};\n  border: 0;\n  box-shadow:\n    inset 0px -1px 0 ${Colors.keylineDefault()},\n    inset 0px 1px 0 ${Colors.keylineDefault()};\n  color: ${Colors.textLight()};\n  cursor: pointer;\n  display: block;\n  padding: 0;\n  width: 100%;\n  margin: 0;\n  height: ${SECTION_HEADER_HEIGHT}px;\n  text-align: left;\n\n  :focus,\n  :active {\n    outline: none;\n  }\n\n  :hover {\n    background-color: ${Colors.backgroundLightHover()};\n  }\n\n  ${IconWrapper}[aria-label=\"arrow_drop_down\"] {\n    transition: transform 100ms linear;\n    ${({$open}) => ($open ? null : `transform: rotate(-90deg);`)}\n  }\n`;\n","import {Box, Colors, Icon} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nimport {TableSectionHeader, TableSectionHeaderProps} from '../workspace/TableSectionHeader';\nimport {DUNDER_REPO_NAME} from '../workspace/buildRepoAddress';\n\ninterface Props extends TableSectionHeaderProps {\n  repoName: string;\n  repoLocation: string;\n  showLocation: boolean;\n}\n\nexport const RepoSectionHeader = (props: Props) => {\n  const {repoName, repoLocation, showLocation, ...rest} = props;\n  const isDunderRepoName = repoName === DUNDER_REPO_NAME;\n  return (\n    <TableSectionHeader {...rest}>\n      <Box flex={{alignItems: 'center', gap: 8}}>\n        <Icon name=\"folder\" color={Colors.accentGray()} />\n        <div>\n          <RepoName>{isDunderRepoName ? repoLocation : repoName}</RepoName>\n          {showLocation && !isDunderRepoName ? (\n            <RepoLocation>{`@${repoLocation}`}</RepoLocation>\n          ) : null}\n        </div>\n      </Box>\n    </TableSectionHeader>\n  );\n};\n\nconst RepoName = styled.span`\n  font-weight: 600;\n`;\n\nconst RepoLocation = styled.span`\n  font-weight: 400;\n  color: ${Colors.textLighter()};\n`;\n","import {QueryResult} from '@apollo/client';\nimport {Caption, Colors} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nimport {RepoAddress} from './types';\nimport {RepoSectionHeader} from '../runs/RepoSectionHeader';\nimport {Row} from '../ui/VirtualizedTable';\n\nexport const RepoRow = ({\n  repoAddress,\n  height,\n  start,\n  expanded,\n  onToggle,\n  onToggleAll,\n  showLocation,\n  rightElement,\n}: {\n  repoAddress: RepoAddress;\n  height: number;\n  start: number;\n  showLocation: boolean;\n  rightElement: React.ReactNode;\n  expanded: boolean;\n  onToggle: (repoAddress: RepoAddress) => void;\n  onToggleAll: (expanded: boolean) => void;\n}) => {\n  return (\n    <Row $height={height} $start={start}>\n      <RepoSectionHeader\n        repoName={repoAddress.name}\n        repoLocation={repoAddress.location}\n        expanded={expanded}\n        onClick={(e: React.MouseEvent) =>\n          e.getModifierState('Shift') ? onToggleAll(!expanded) : onToggle(repoAddress)\n        }\n        showLocation={showLocation}\n        rightElement={rightElement}\n      />\n    </Row>\n  );\n};\n\nexport const LoadingOrNone = ({\n  queryResult,\n  noneString = 'None',\n}: {\n  queryResult: QueryResult<any, any>;\n  noneString?: React.ReactNode;\n}) => {\n  const {called, loading, data} = queryResult;\n  return (\n    <div style={{color: Colors.textLight()}}>\n      {!called || (loading && !data) ? 'Loading' : noneString}\n    </div>\n  );\n};\n\nexport const CaptionText = ({children}: {children: React.ReactNode}) => {\n  return (\n    <CaptionTextContainer>\n      <Caption>{children}</Caption>\n    </CaptionTextContainer>\n  );\n};\n\nconst CaptionTextContainer = styled.div`\n  max-width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  ${Caption} {\n    color: ${Colors.textLight()};\n    white-space: nowrap;\n  }\n`;\n\nconst JOB_QUERY_DELAY = 100;\n\nexport const useDelayedRowQuery = (lazyQueryFn: () => void) => {\n  React.useEffect(() => {\n    const timer = setTimeout(() => {\n      lazyQueryFn();\n    }, JOB_QUERY_DELAY);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [lazyQueryFn]);\n};\n"],"names":["LastRunSummary","memo","param","tagElement","name","run","showHover","_param_showButton","showButton","_param_showSummary","showSummary","status","intent","useMemo","RunStatus","SUCCESS","CANCELED","CANCELING","FAILURE","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Box","flex","direction","justifyContent","alignItems","gap","jsx","Tag","RunStatusIndicator","size","RunTime","_param_showHover","Popover","position","interactionKind","content","div","RunStatusOverlay","hoverOpenDelay","RunStateSummary","failedStatuses","has","inProgressStatuses","StepSummaryForRun","runId","id","undefined","AnchorButton","to","concat","props","data","useQuery","STEP_SUMMARY_FOR_RUN_QUERY","variables","pipelineRunOrError","__typename","relevantSteps","stepStats","filter","step","StepEventStatus","IN_PROGRESS","stepCount","length","query","endTime","qs","focusedTime","Math","floor","addQueryPrefix","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","Caption","color","Colors","Link","stepKey","gql","RunStatusPez","opacity","RUN_STATUS_COLORS","Pez","$color","$opacity","MAX_OPACITY","RunStatusPezList","fade","jobName","runs","count","max","map","ii","OverlayContainer","OverlayTitle","RunRow","CaptionMono","titleForRun","SummaryContainer","styled","withConfig","FontFamily","default","SECTION_HEADER_HEIGHT","TableSectionHeader","expanded","onClick","children","rightElement","SectionHeaderButton","$open","padding","horizontal","margin","top","Icon","button","IconWrapper","RepoSectionHeader","repoName","repoLocation","showLocation","rest","isDunderRepoName","DUNDER_REPO_NAME","jsx_runtime","RepoName","RepoLocation","span","RepoRow","repoAddress","height","start","onToggle","onToggleAll","Row","$height","$start","location","e","getModifierState","LoadingOrNone","queryResult","noneString","called","loading","style","_param_noneString","CaptionText","CaptionTextContainer","useDelayedRowQuery","lazyQueryFn","React","timer","setTimeout","clearTimeout"],"sourceRoot":""}