# coding: utf-8

"""
    Grounding Hub REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from groundinghub.models.chat_completion_request import ChatCompletionRequest

class TestChatCompletionRequest(unittest.TestCase):
    """ChatCompletionRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ChatCompletionRequest:
        """Test ChatCompletionRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ChatCompletionRequest`
        """
        model = ChatCompletionRequest()
        if include_optional:
            return ChatCompletionRequest(
                query = 'Show me mounthly income in the form of table for the last quater',
                messages = [{"role":"user","content":"Hello!"},{"role":"assistant","content":"Good morning. How can I assist you?"}],
                rag_config = groundinghub.models.rag_config.RAGConfig(
                    document_properties = {"organization":["hitachi-rail"],"document_class":["manual","user-manual"],"language":["english"],"content_type":["schematics"]}, ),
                prompt_config = groundinghub.models.prompt_config.PromptConfig(
                    template_id = '', 
                    input_variables = {"speciality":"computer engineer","age":"34"}, ),
                model_settings = groundinghub.models.model_settings.ModelSettings(
                    model = 'hitachi-genai-platform/HGP-7b-instruct', 
                    params = groundinghub.models.model_params.ModelParams(
                        temperature = 0.9, 
                        top_p = 0.1, 
                        max_tokens = 100, 
                        stop = ["stop","\\n","user:"], ), )
            )
        else:
            return ChatCompletionRequest(
                query = 'Show me mounthly income in the form of table for the last quater',
        )
        """

    def testChatCompletionRequest(self):
        """Test ChatCompletionRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
