# coding: utf-8

"""
    Robust Intelligence REST API

    API methods for Robust Intelligence. Users must authenticate using the `rime-api-key` header.

    The version of the OpenAPI document: 1.0
    Contact: dev@robustintelligence.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from datetime import datetime
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictStr
from typing_extensions import Annotated
from ri.apiclient.models.generativefirewall_get_firewall_effective_config_response import GenerativefirewallGetFirewallEffectiveConfigResponse
from ri.apiclient.models.generativefirewall_validate_response import GenerativefirewallValidateResponse
from ri.apiclient.models.validate_request import ValidateRequest

from ri.apiclient.models import *
from ri.apiclient.api_client import ApiClient, RequestSerialized
from ri.apiclient.api_response import ApiResponse
from ri.apiclient.rest import RESTResponseType


class FirewallApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def firewall_get_firewall_effective_config(
        self,
        firewall_instance_id_uuid: str,
    ) -> GenerativefirewallGetFirewallEffectiveConfigResponse:
        """GetFirewallEffectiveConfig

        Retrieve the effective config of the firewall. The effective config is the users config plus all defaults. This request will be routed to a specific FirewallInstance. There can be multiple FirewallInstances in the cluster with different configurations.

        :param firewall_instance_id_uuid: Unique object ID. (required)
        :type firewall_instance_id_uuid: str
        :return: Returns the result object.
        """ # noqa: E501


        _param = self._firewall_get_firewall_effective_config_serialize(
            firewall_instance_id_uuid=firewall_instance_id_uuid,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GenerativefirewallGetFirewallEffectiveConfigResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data

    def _firewall_get_firewall_effective_config_serialize(
        self,
        firewall_instance_id_uuid,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        if firewall_instance_id_uuid is not None:
            _path_params['firewallInstanceId.uuid'] = firewall_instance_id_uuid


        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        _auth_settings: List[str] = [
            'X-Firewall-Api-Key'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/v1-beta/firewall/effective-config/{firewallInstanceId.uuid}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
        )




    @validate_call
    def validate(
        self,
        firewall_instance_id_uuid: str,
        input: Optional[ValidateRequestInput] = None,
        output: Optional[ValidateRequestOutput] = None,
        firewall_instance_id: Optional[object] = None,
    ) -> GenerativefirewallValidateResponse:
        """Validate performs real-time validation on a single query to the model. This request will be routed to a specific FirewallInstance. There can be multiple FirewallInstances in the cluster with different configurations.


        :param firewall_instance_id_uuid: Unique object ID. (required)
        :type firewall_instance_id_uuid: str
        :param input:
        :type input: ValidateRequestInput
        :param output:
        :type output: ValidateRequestOutput
        :param firewall_instance_id: Identify which FirewallInstance to route this request to. This is not used by the server directly, but it is necessary for routing.
        :type firewall_instance_id: object
        :return: Returns the result object.
        """ # noqa: E501

        body = ValidateRequest(
          input=input,
          output=output,
          firewall_instance_id=firewall_instance_id,
        )

        _param = self._validate_serialize(
            firewall_instance_id_uuid=firewall_instance_id_uuid,
            body=body,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GenerativefirewallValidateResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data

    def _validate_serialize(
        self,
        firewall_instance_id_uuid,
        body,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        if firewall_instance_id_uuid is not None:
            _path_params['firewallInstanceId.uuid'] = firewall_instance_id_uuid
        if body is not None:
            _body_params = body


        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )

        _default_content_type = (
            self.api_client.select_header_content_type(
                [
                    'application/json'
                ]
            )
        )
        if _default_content_type is not None:
            _header_params['Content-Type'] = _default_content_type

        _auth_settings: List[str] = [
            'X-Firewall-Api-Key'
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/v1-beta/firewall/validate/{firewallInstanceId.uuid}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
        )
