"use strict";(self.webpackChunkjupyterlab_empinken_extension=self.webpackChunkjupyterlab_empinken_extension||[]).push([[127],{127:(e,t,n)=>{n.r(t),n.d(t,{Scope:()=>l,apply_on_cells:()=>a,default:()=>k,md_clean:()=>C,md_get:()=>p,md_has:()=>y,md_insert:()=>M,md_remove:()=>b,md_set:()=>h,md_toggle:()=>_,md_toggle_multi:()=>w,md_unset:()=>A});var l,o=n(793),s=n(712);!function(e){e[e.All=0]="All",e[e.Active=1]="Active",e[e.Multiple=2]="Multiple"}(l||(l={}));const a=(e,t,n)=>{var o;const s=null===(o=e.currentWidget)||void 0===o?void 0:o.content;if(void 0===s)return;let a;if(t===l.All)a=s.widgets.slice();else{const e=s.activeCell;if(null===e)return;if(t===l.Active)a=[e];else{const{anchor:t,head:n}=s.getContiguousSelection();a=null===t||null===n?[e]:s.widgets.slice(t,n+1)}}a.forEach(n)},c=e=>{console.log("cell_action on",e.node)},r=e=>{console.log("model_action on",e.node);const t=e.model,n=e.model.sharedModel.getSource();t.sharedModel.setSource(n.toUpperCase())};var i,d=n(374);!function(e){e[e.Get=0]="Get",e[e.Set=1]="Set",e[e.Unset=2]="Unset",e[e.Insert=3]="Insert",e[e.Remove=4]="Remove"}(i||(i={}));const u=e=>{if("string"==typeof e){const t=e;return 0===t.length?[]:t.split(".")}return e instanceof Array?e:(console.error(`xpath must be string or array, got ${e}`),[])},m=(e,t,n,l)=>{const{Get:o,Set:s,Unset:a,Insert:c,Remove:r}=i,d=(e,t,n,l)=>{if(0===n.length)return t===o?e:void 0;if(1===n.length){const[i]=n;switch(t){case o:return e[i];case s:return e[i]=l,l;case a:return i in e&&(delete e[i],!0);case c:if(i in e||(e[i]=[]),!(e[i]instanceof Array))return;{const t=e[i];return t.indexOf(l)<0?(t.push(l),l):void 0}case r:if(!(e[i]instanceof Array))return;const t=e[i],n=t.indexOf(l);return n>=0&&t.splice(n,1),l}}else{const[i,...u]=n;if(i in e){if(e[i]instanceof Object){const n=e[i];return d(n,t,u,l)}return}switch(t){case o:return;case s:e[i]={};const n=e[i];return d(n,t,u,l);case a:return;case c:return 0===u.length?(e[i]=[],d(e[i],t,u,l)):(e[i]={},d(e[i],t,u,l));case r:return}}},m=u(n);return d(e,t,m,l)},f=(e,t)=>m(e,i.Get,t,void 0),g=(e,t,n)=>m(e,i.Set,t,n),v=(e,t)=>((e,t)=>{const n=e=>e instanceof Array?0!==e.length:e instanceof Object?0!==Object.keys(e).length:"string"!=typeof e||0!==e.length,l=e=>e instanceof Array?(e=>e.map(l).filter(n))(e):e instanceof Object?(e=>{const t={};for(const o in e){const s=e[o],a=l(s);n(a)&&(t[o]=a)}return t})(e):e,o=u(t);if(0===o.length)return l(e);{const t=f(e,o);return void 0===t?e:g(e,o,l(t))}})(e,t),p=(e,t,n)=>{e instanceof d.Cell&&(e=e.model),t=u(t);const[l,...o]=t,s=e.getMetadata(l);return void 0===s?n:f(s,o)},h=(e,t,n)=>{t=u(t);const[l,...o]=t,s=e.model.getMetadata(l);if(0===o.length)return e.model.setMetadata(l,n),n;const a=s||{},c=g(a,o,n);return e.model.setMetadata(l,a),c},A=(e,t)=>{t=u(t);const[n,...l]=t,o=e.model.getMetadata(n);if(void 0===o)return!1;if(0===l.length)return e.model.deleteMetadata(n),!0;{const t=((e,t)=>m(e,i.Unset,t,void 0))(o,l);return e.model.setMetadata(n,o),t}},y=(e,t,n)=>{t=u(t);const[l,...o]=t,s=e.model.getMetadata(l);if(void 0===s)return!1;const a=f(s,o);return void 0!==a&&a.indexOf(n)>=0},M=(e,t,n)=>{t=u(t);const[l,...o]=t,s=e.model.getMetadata(l);if(0===o.length){let t;return void 0!==s?(t=s,t=t.slice()):t=[],t.indexOf(n)<0?(t.push(n),e.model.setMetadata(l,t),n):void 0}{const t=s||{},a=((e,t,n)=>m(e,i.Insert,t,n))(t,o,n);return e.model.setMetadata(l,t),a}},b=(e,t,n)=>{t=u(t);const[l,...o]=t,s=e.model.getMetadata(l);if(void 0!==s){if(0===o.length){if(!(s instanceof Array))return;const t=s.slice(),o=t.indexOf(n);if(o<0)return;return t.splice(o,1),e.model.setMetadata(l,t),n}{const t=s,a=((e,t,n)=>m(e,i.Remove,t,n))(t,o,n);return e.model.setMetadata(l,t),a}}},_=(e,t,n)=>(t=u(t),y(e,t,n)?b(e,t,n):M(e,t,n)),w=(e,t,n,l)=>{l.includes(n)&&_(e,t,n);for(const o of l)o!==n&&b(e,t,o)},C=(e,t)=>{t=u(t);const[n,...l]=t;if(void 0===n){console.log(e.model.metadata);for(const t of Object.entries(e.model.metadata)){const n=t,l=v(p(e,n),"");void 0===l||0===l.length?A(e,n):h(e,n,l)}}else{const t=p(e,n),o=v(t,l);void 0===o||0===o.length?A(e,n):h(e,n,o)}},k={id:"jupyterlab-celltagsclasses:plugin",autoStart:!0,requires:[o.INotebookTracker,s.ICommandPalette],activate:(e,t,n)=>{console.log("extension jupyterlab-celltagsclasses is activating"),((e,t,n)=>{const o=(l,o,s,c,r)=>{const i=`celltagsclasses:${l}`;e.commands.addCommand(i,{label:o,execute:()=>{console.log(o),a(t,s,r)}}),n.addItem({command:i,category:"celltagsclasses"}),e.commands.addKeyBinding({command:i,keys:c,selector:".jp-Notebook"})};o("single-model","perform model action on single active cell",l.Active,["Alt-K","Alt-1"],r),o("multiple-model","perform model action on multiple selected cells",l.Multiple,["Alt-K","Alt-2"],r),o("all-model","perform model action on all cells",l.All,["Alt-K","Alt-3"],r),o("single-cell","perform action on single active cell",l.Active,["Alt-K","Alt-4"],c),o("multiple-cell","perform action on multiple selected cells",l.Multiple,["Alt-K","Alt-5"],c),o("all-cell","perform action on all cells",l.All,["Alt-K","Alt-6"],c)})(e,t,n);const o=e=>`cell-tag-${e}`;t.widgetAdded.connect(((e,t)=>{const n=t.content.model;null!==n&&n.cells.changed.connect(((e,n)=>{"add"===n.type&&n.newValues.forEach((e=>{var n;const l=t.content.widgets.filter(((t,n)=>t.model.id===e.id));void 0!==l&&0!==(null==l?void 0:l.length)&&(null===(n=e.getMetadata("tags"))||void 0===n||n.forEach((e=>null==l?void 0:l.forEach((t=>{t.addClass(o(e))})))),e.metadataChanged.connect(((e,t)=>{if("tags"===t.key)if("change"===t.type){const e=t.oldValue,n=t.newValue,s=n.filter((t=>!e.includes(t))),a=e.filter((e=>!n.includes(e)));l.forEach((e=>{s.forEach((t=>{console.debug(`adding class for tag ${o(t)}`),e.addClass(o(t))})),a.forEach((t=>{console.debug(`removing class for tag ${o(t)}`),e.removeClass(o(t))}))}))}else"add"===t.type?(console.debug("celltagsclasses: add",t,t.newValue),l.forEach((e=>{for(const n of t.newValue)e.addClass(o(n))}))):"remove"===t.type&&(console.debug("celltagsclasses: remove",t,t.newValue),l.forEach((e=>{for(const n of t.newValue)e.removeClass(o(n))})))})))}))}))}))}}}}]);