"use strict";
(self["webpackChunk_datalayer_jupyter_viewer"] = self["webpackChunk_datalayer_jupyter_viewer"] || []).push([[2],{

/***/ 80002:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "wast": () => (/* binding */ wast),
/* harmony export */   "wastLanguage": () => (/* binding */ wastLanguage)
/* harmony export */ });
/* harmony import */ var _codemirror_language__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(50478);
/* harmony import */ var _lezer_highlight__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(36345);
/* harmony import */ var _lezer_lr__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(37734);




// This file was generated by lezer-generator. You probably shouldn't edit it.
const spec_Keyword = {
  __proto__: null,
  anyref: 34,
  dataref: 34,
  eqref: 34,
  externref: 34,
  i31ref: 34,
  funcref: 34,
  i8: 34,
  i16: 34,
  i32: 34,
  i64: 34,
  f32: 34,
  f64: 34
};
const parser = /*@__PURE__*/_lezer_lr__WEBPACK_IMPORTED_MODULE_1__/* .LRParser.deserialize */ .WQ.deserialize({
  version: 14,
  states: "!^Q]QPOOOqQPO'#CbOOQO'#Cd'#CdOOQO'#Cl'#ClOOQO'#Ch'#ChQ]QPOOOOQO,58|,58|OxQPO,58|OOQO-E6f-E6fOOQO1G.h1G.h",
  stateData: "!P~O_OSPOSQOS~OTPOVROXROYROZROaQO~OSUO~P]OSXO~P]O",
  goto: "xaPPPPPPbPbPPPhPPPrXROPTVQTOQVPTWTVXSOPTV",
  nodeNames: "âš  LineComment BlockComment Module ) ( App Identifier Type Keyword Number String",
  maxTerm: 17,
  nodeProps: [["isolate", -3, 1, 2, 11, ""], ["openedBy", 4, "("], ["closedBy", 5, ")"], ["group", -6, 6, 7, 8, 9, 10, 11, "Expression"]],
  skippedNodes: [0, 1, 2],
  repeatNodeCount: 1,
  tokenData: "0o~R^XY}YZ}]^}pq}rs!Stu#pxy'Uyz(e{|(j}!O(j!Q!R(s!R![*p!]!^.^#T#o.{~!SO_~~!VVOr!Srs!ls#O!S#O#P!q#P;'S!S;'S;=`#j<%lO!S~!qOZ~~!tRO;'S!S;'S;=`!};=`O!S~#QWOr!Srs!ls#O!S#O#P!q#P;'S!S;'S;=`#j;=`<%l!S<%lO!S~#mP;=`<%l!S~#siqr%bst%btu%buv%bvw%bwx%bz{%b{|%b}!O%b!O!P%b!P!Q%b!Q![%b![!]%b!^!_%b!_!`%b!`!a%b!a!b%b!b!c%b!c!}%b#Q#R%b#R#S%b#S#T%b#T#o%b#p#q%b#r#s%b~%giV~qr%bst%btu%buv%bvw%bwx%bz{%b{|%b}!O%b!O!P%b!P!Q%b!Q![%b![!]%b!^!_%b!_!`%b!`!a%b!a!b%b!b!c%b!c!}%b#Q#R%b#R#S%b#S#T%b#T#o%b#p#q%b#r#s%b~'ZPT~!]!^'^~'aTO!]'^!]!^'p!^;'S'^;'S;=`(_<%lO'^~'sVOy'^yz(Yz!]'^!]!^'p!^;'S'^;'S;=`(_<%lO'^~(_OQ~~(bP;=`<%l'^~(jOS~~(mQ!Q!R(s!R![*p~(xUY~!O!P)[!Q![*p!g!h){#R#S+U#X#Y){#l#m+[~)aRY~!Q![)j!g!h){#X#Y){~)oSY~!Q![)j!g!h){#R#S*j#X#Y){~*OR{|*X}!O*X!Q![*_~*[P!Q![*_~*dQY~!Q![*_#R#S*X~*mP!Q![)j~*uTY~!O!P)[!Q![*p!g!h){#R#S+U#X#Y){~+XP!Q![*p~+_R!Q![+h!c!i+h#T#Z+h~+mVY~!O!P,S!Q![+h!c!i+h!r!s-P#R#S+[#T#Z+h#d#e-P~,XTY~!Q![,h!c!i,h!r!s-P#T#Z,h#d#e-P~,mUY~!Q![,h!c!i,h!r!s-P#R#S.Q#T#Z,h#d#e-P~-ST{|-c}!O-c!Q![-o!c!i-o#T#Z-o~-fR!Q![-o!c!i-o#T#Z-o~-tSY~!Q![-o!c!i-o#R#S-c#T#Z-o~.TR!Q![,h!c!i,h#T#Z,h~.aP!]!^.d~.iSP~OY.dZ;'S.d;'S;=`.u<%lO.d~.xP;=`<%l.d~/QiX~qr.{st.{tu.{uv.{vw.{wx.{z{.{{|.{}!O.{!O!P.{!P!Q.{!Q![.{![!].{!^!_.{!_!`.{!`!a.{!a!b.{!b!c.{!c!}.{#Q#R.{#R#S.{#S#T.{#T#o.{#p#q.{#r#s.{",
  tokenizers: [0],
  topRules: {
    "Module": [0, 3]
  },
  specialized: [{
    term: 9,
    get: value => spec_Keyword[value] || -1
  }],
  tokenPrec: 0
});
const wastLanguage = /*@__PURE__*/_codemirror_language__WEBPACK_IMPORTED_MODULE_2__/* .LRLanguage.define */ .qp.define({
  name: "wast",
  parser: /*@__PURE__*/parser.configure({
    props: [/*@__PURE__*/_codemirror_language__WEBPACK_IMPORTED_MODULE_2__/* .indentNodeProp.add */ .uj.add({
      App: /*@__PURE__*/(0,_codemirror_language__WEBPACK_IMPORTED_MODULE_2__/* .delimitedIndent */ .vw)({
        closing: ")",
        align: false
      })
    }), /*@__PURE__*/_codemirror_language__WEBPACK_IMPORTED_MODULE_2__/* .foldNodeProp.add */ .x0.add({
      App: _codemirror_language__WEBPACK_IMPORTED_MODULE_2__/* .foldInside */ .Dv,
      BlockComment(tree) {
        return {
          from: tree.from + 2,
          to: tree.to - 2
        };
      }
    }), /*@__PURE__*/(0,_lezer_highlight__WEBPACK_IMPORTED_MODULE_0__/* .styleTags */ .Gv)({
      Keyword: _lezer_highlight__WEBPACK_IMPORTED_MODULE_0__/* .tags.keyword */ .pJ.keyword,
      Type: _lezer_highlight__WEBPACK_IMPORTED_MODULE_0__/* .tags.typeName */ .pJ.typeName,
      Number: _lezer_highlight__WEBPACK_IMPORTED_MODULE_0__/* .tags.number */ .pJ.number,
      String: _lezer_highlight__WEBPACK_IMPORTED_MODULE_0__/* .tags.string */ .pJ.string,
      Identifier: _lezer_highlight__WEBPACK_IMPORTED_MODULE_0__/* .tags.variableName */ .pJ.variableName,
      LineComment: _lezer_highlight__WEBPACK_IMPORTED_MODULE_0__/* .tags.lineComment */ .pJ.lineComment,
      BlockComment: _lezer_highlight__WEBPACK_IMPORTED_MODULE_0__/* .tags.blockComment */ .pJ.blockComment,
      "( )": _lezer_highlight__WEBPACK_IMPORTED_MODULE_0__/* .tags.paren */ .pJ.paren
    })]
  }),
  languageData: {
    commentTokens: {
      line: ";;",
      block: {
        open: "(;",
        close: ";)"
      }
    },
    closeBrackets: {
      brackets: ["(", '"']
    }
  }
});
function wast() {
  return new _codemirror_language__WEBPACK_IMPORTED_MODULE_2__/* .LanguageSupport */ .ri(wastLanguage);
}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qdXB5dGVyLXZpZXdlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkYXRhbGF5ZXIvanVweXRlci12aWV3ZXIvLi9ub2RlX21vZHVsZXMvQGNvZGVtaXJyb3IvbGFuZy13YXN0L2Rpc3QvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTFJMYW5ndWFnZSwgaW5kZW50Tm9kZVByb3AsIGRlbGltaXRlZEluZGVudCwgZm9sZE5vZGVQcm9wLCBmb2xkSW5zaWRlLCBMYW5ndWFnZVN1cHBvcnQgfSBmcm9tICdAY29kZW1pcnJvci9sYW5ndWFnZSc7XG5pbXBvcnQgeyBzdHlsZVRhZ3MsIHRhZ3MgfSBmcm9tICdAbGV6ZXIvaGlnaGxpZ2h0JztcbmltcG9ydCB7IExSUGFyc2VyIH0gZnJvbSAnQGxlemVyL2xyJztcblxuLy8gVGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgbGV6ZXItZ2VuZXJhdG9yLiBZb3UgcHJvYmFibHkgc2hvdWxkbid0IGVkaXQgaXQuXG5jb25zdCBzcGVjX0tleXdvcmQgPSB7XG4gIF9fcHJvdG9fXzogbnVsbCxcbiAgYW55cmVmOiAzNCxcbiAgZGF0YXJlZjogMzQsXG4gIGVxcmVmOiAzNCxcbiAgZXh0ZXJucmVmOiAzNCxcbiAgaTMxcmVmOiAzNCxcbiAgZnVuY3JlZjogMzQsXG4gIGk4OiAzNCxcbiAgaTE2OiAzNCxcbiAgaTMyOiAzNCxcbiAgaTY0OiAzNCxcbiAgZjMyOiAzNCxcbiAgZjY0OiAzNFxufTtcbmNvbnN0IHBhcnNlciA9IC8qQF9fUFVSRV9fKi9MUlBhcnNlci5kZXNlcmlhbGl6ZSh7XG4gIHZlcnNpb246IDE0LFxuICBzdGF0ZXM6IFwiIV5RXVFQT09PcVFQTycjQ2JPT1FPJyNDZCcjQ2RPT1FPJyNDbCcjQ2xPT1FPJyNDaCcjQ2hRXVFQT09PT1FPLDU4fCw1OHxPeFFQTyw1OHxPT1FPLUU2Zi1FNmZPT1FPMUcuaDFHLmhcIixcbiAgc3RhdGVEYXRhOiBcIiFQfk9fT1NQT1NRT1N+T1RQT1ZST1hST1lST1pST2FRT35PU1VPflBdT1NYT35QXU9cIixcbiAgZ290bzogXCJ4YVBQUFBQUGJQYlBQUGhQUFByWFJPUFRWUVRPUVZQVFdUVlhTT1BUVlwiLFxuICBub2RlTmFtZXM6IFwi4pqgIExpbmVDb21tZW50IEJsb2NrQ29tbWVudCBNb2R1bGUgKSAoIEFwcCBJZGVudGlmaWVyIFR5cGUgS2V5d29yZCBOdW1iZXIgU3RyaW5nXCIsXG4gIG1heFRlcm06IDE3LFxuICBub2RlUHJvcHM6IFtbXCJpc29sYXRlXCIsIC0zLCAxLCAyLCAxMSwgXCJcIl0sIFtcIm9wZW5lZEJ5XCIsIDQsIFwiKFwiXSwgW1wiY2xvc2VkQnlcIiwgNSwgXCIpXCJdLCBbXCJncm91cFwiLCAtNiwgNiwgNywgOCwgOSwgMTAsIDExLCBcIkV4cHJlc3Npb25cIl1dLFxuICBza2lwcGVkTm9kZXM6IFswLCAxLCAyXSxcbiAgcmVwZWF0Tm9kZUNvdW50OiAxLFxuICB0b2tlbkRhdGE6IFwiMG9+Ul5YWX1ZWn1dXn1wcX1ycyFTdHUjcHh5J1V5eihle3woan0hTyhqIVEhUihzIVIhWypwIV0hXi5eI1Qjby57fiFTT19+fiFWVk9yIVNycyFscyNPIVMjTyNQIXEjUDsnUyFTOydTOz1gI2o8JWxPIVN+IXFPWn5+IXRSTzsnUyFTOydTOz1gIX07PWBPIVN+I1FXT3IhU3JzIWxzI08hUyNPI1AhcSNQOydTIVM7J1M7PWAjajs9YDwlbCFTPCVsTyFTfiNtUDs9YDwlbCFTfiNzaXFyJWJzdCVidHUlYnV2JWJ2dyVid3glYnp7JWJ7fCVifSFPJWIhTyFQJWIhUCFRJWIhUSFbJWIhWyFdJWIhXiFfJWIhXyFgJWIhYCFhJWIhYSFiJWIhYiFjJWIhYyF9JWIjUSNSJWIjUiNTJWIjUyNUJWIjVCNvJWIjcCNxJWIjciNzJWJ+JWdpVn5xciVic3QlYnR1JWJ1diVidnclYnd4JWJ6eyVie3wlYn0hTyViIU8hUCViIVAhUSViIVEhWyViIVshXSViIV4hXyViIV8hYCViIWAhYSViIWEhYiViIWIhYyViIWMhfSViI1EjUiViI1IjUyViI1MjVCViI1QjbyViI3AjcSViI3IjcyVifidaUFR+IV0hXidefidhVE8hXSdeIV0hXidwIV47J1MnXjsnUzs9YChfPCVsTydefidzVk95J155eihZeiFdJ14hXSFeJ3AhXjsnUydeOydTOz1gKF88JWxPJ15+KF9PUX5+KGJQOz1gPCVsJ15+KGpPU35+KG1RIVEhUihzIVIhWypwfih4VVl+IU8hUClbIVEhWypwIWchaCl7I1IjUytVI1gjWSl7I2wjbStbfilhUll+IVEhWylqIWchaCl7I1gjWSl7filvU1l+IVEhWylqIWchaCl7I1IjUypqI1gjWSl7fipPUnt8Klh9IU8qWCFRIVsqX34qW1AhUSFbKl9+KmRRWX4hUSFbKl8jUiNTKlh+Km1QIVEhWylqfip1VFl+IU8hUClbIVEhWypwIWchaCl7I1IjUytVI1gjWSl7fitYUCFRIVsqcH4rX1IhUSFbK2ghYyFpK2gjVCNaK2h+K21WWX4hTyFQLFMhUSFbK2ghYyFpK2ghciFzLVAjUiNTK1sjVCNaK2gjZCNlLVB+LFhUWX4hUSFbLGghYyFpLGghciFzLVAjVCNaLGgjZCNlLVB+LG1VWX4hUSFbLGghYyFpLGghciFzLVAjUiNTLlEjVCNaLGgjZCNlLVB+LVNUe3wtY30hTy1jIVEhWy1vIWMhaS1vI1QjWi1vfi1mUiFRIVstbyFjIWktbyNUI1otb34tdFNZfiFRIVstbyFjIWktbyNSI1MtYyNUI1otb34uVFIhUSFbLGghYyFpLGgjVCNaLGh+LmFQIV0hXi5kfi5pU1B+T1kuZFo7J1MuZDsnUzs9YC51PCVsTy5kfi54UDs9YDwlbC5kfi9RaVh+cXIue3N0Lnt0dS57dXYue3Z3Lnt3eC57ensue3t8Lnt9IU8ueyFPIVAueyFQIVEueyFRIVsueyFbIV0ueyFeIV8ueyFfIWAueyFgIWEueyFhIWIueyFiIWMueyFjIX0ueyNRI1IueyNSI1MueyNTI1QueyNUI28ueyNwI3EueyNyI3Mue1wiLFxuICB0b2tlbml6ZXJzOiBbMF0sXG4gIHRvcFJ1bGVzOiB7XG4gICAgXCJNb2R1bGVcIjogWzAsIDNdXG4gIH0sXG4gIHNwZWNpYWxpemVkOiBbe1xuICAgIHRlcm06IDksXG4gICAgZ2V0OiB2YWx1ZSA9PiBzcGVjX0tleXdvcmRbdmFsdWVdIHx8IC0xXG4gIH1dLFxuICB0b2tlblByZWM6IDBcbn0pO1xuY29uc3Qgd2FzdExhbmd1YWdlID0gLypAX19QVVJFX18qL0xSTGFuZ3VhZ2UuZGVmaW5lKHtcbiAgbmFtZTogXCJ3YXN0XCIsXG4gIHBhcnNlcjogLypAX19QVVJFX18qL3BhcnNlci5jb25maWd1cmUoe1xuICAgIHByb3BzOiBbLypAX19QVVJFX18qL2luZGVudE5vZGVQcm9wLmFkZCh7XG4gICAgICBBcHA6IC8qQF9fUFVSRV9fKi9kZWxpbWl0ZWRJbmRlbnQoe1xuICAgICAgICBjbG9zaW5nOiBcIilcIixcbiAgICAgICAgYWxpZ246IGZhbHNlXG4gICAgICB9KVxuICAgIH0pLCAvKkBfX1BVUkVfXyovZm9sZE5vZGVQcm9wLmFkZCh7XG4gICAgICBBcHA6IGZvbGRJbnNpZGUsXG4gICAgICBCbG9ja0NvbW1lbnQodHJlZSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGZyb206IHRyZWUuZnJvbSArIDIsXG4gICAgICAgICAgdG86IHRyZWUudG8gLSAyXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfSksIC8qQF9fUFVSRV9fKi9zdHlsZVRhZ3Moe1xuICAgICAgS2V5d29yZDogdGFncy5rZXl3b3JkLFxuICAgICAgVHlwZTogdGFncy50eXBlTmFtZSxcbiAgICAgIE51bWJlcjogdGFncy5udW1iZXIsXG4gICAgICBTdHJpbmc6IHRhZ3Muc3RyaW5nLFxuICAgICAgSWRlbnRpZmllcjogdGFncy52YXJpYWJsZU5hbWUsXG4gICAgICBMaW5lQ29tbWVudDogdGFncy5saW5lQ29tbWVudCxcbiAgICAgIEJsb2NrQ29tbWVudDogdGFncy5ibG9ja0NvbW1lbnQsXG4gICAgICBcIiggKVwiOiB0YWdzLnBhcmVuXG4gICAgfSldXG4gIH0pLFxuICBsYW5ndWFnZURhdGE6IHtcbiAgICBjb21tZW50VG9rZW5zOiB7XG4gICAgICBsaW5lOiBcIjs7XCIsXG4gICAgICBibG9jazoge1xuICAgICAgICBvcGVuOiBcIig7XCIsXG4gICAgICAgIGNsb3NlOiBcIjspXCJcbiAgICAgIH1cbiAgICB9LFxuICAgIGNsb3NlQnJhY2tldHM6IHtcbiAgICAgIGJyYWNrZXRzOiBbXCIoXCIsICdcIiddXG4gICAgfVxuICB9XG59KTtcbmZ1bmN0aW9uIHdhc3QoKSB7XG4gIHJldHVybiBuZXcgTGFuZ3VhZ2VTdXBwb3J0KHdhc3RMYW5ndWFnZSk7XG59XG5leHBvcnQgeyB3YXN0LCB3YXN0TGFuZ3VhZ2UgfTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=