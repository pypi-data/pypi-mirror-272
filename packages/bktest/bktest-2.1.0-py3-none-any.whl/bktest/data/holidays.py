import abc
import datetime
import typing

import dateutil.parser


class HolidayProvider(abc.ABC):

    @abc.abstractmethod
    def is_holiday(self, date: datetime.date):
        ...


class LegacyHolidayProvider(HolidayProvider):

    HOLIDAYS = set(map(lambda x: dateutil.parser.parse(x).date(), [
        # from https://github.com/QuantConnect/Lean/blob/master/Data/market-hours/market-hours-database.json
        "1998-01-01",
        "1999-01-01",
        "2001-01-01",
        "2002-01-01",
        "2003-01-01",
        "2004-01-01",
        "2006-01-02",
        "2007-01-01",
        "2008-01-01",
        "2009-01-01",
        "2010-01-01",
        "2011-01-01",
        "2012-01-02",
        "2013-01-01",
        "2014-01-01",
        "2015-01-01",
        "2016-01-01",
        "2017-01-02",
        "2018-01-01",
        "2019-01-01",
        "2020-01-01",
        "2021-01-01",
        "2022-01-01",
        "2023-01-02",
        "2007-01-02",
        "2001-09-11",
        "2001-09-12",
        "2001-09-13",
        "2001-09-14",
        "2004-06-11",
        "2012-10-29",
        "2012-10-30",
        "1998-01-19",
        "1999-01-18",
        "2000-01-17",
        "2001-01-15",
        "2002-01-21",
        "2003-01-20",
        "2004-01-19",
        "2005-01-17",
        "2006-01-16",
        "2007-01-15",
        "2008-01-21",
        "2009-01-19",
        "2010-01-18",
        "2011-01-17",
        "2012-01-16",
        "2013-01-21",
        "2014-01-20",
        "2015-01-19",
        "2016-01-18",
        "2017-01-16",
        "2018-01-15",
        "2019-01-21",
        "2020-01-20",
        "2021-01-18",
        "2022-01-17",
        "2023-01-16",
        "1998-02-16",
        "1999-02-15",
        "2000-02-21",
        "2001-02-19",
        "2002-02-18",
        "2003-02-17",
        "2004-02-16",
        "2005-02-21",
        "2006-02-20",
        "2007-02-19",
        "2008-02-18",
        "2009-02-16",
        "2010-02-15",
        "2011-02-21",
        "2012-02-20",
        "2013-02-18",
        "2014-02-17",
        "2015-02-16",
        "2016-02-15",
        "2017-02-20",
        "2018-02-19",
        "2019-02-18",
        "2020-02-17",
        "2021-02-15",
        "2022-02-21",
        "2023-02-20",
        "1998-04-10",
        "1999-04-02",
        "2000-04-21",
        "2001-04-13",
        "2002-03-29",
        "2003-04-18",
        "2004-04-09",
        "2005-03-25",
        "2006-04-14",
        "2007-04-06",
        "2008-03-21",
        "2009-04-10",
        "2010-04-02",
        "2011-04-22",
        "2012-04-06",
        "2013-03-29",
        "2014-04-18",
        "2015-04-03",
        "2016-03-25",
        "2017-04-14",
        "2018-03-30",
        "2019-04-19",
        "2020-04-10",
        "2021-04-02",
        "2022-04-15",
        "2023-04-07",
        "1998-05-25",
        "1999-05-31",
        "2000-05-29",
        "2001-05-28",
        "2002-05-27",
        "2003-05-26",
        "2004-05-31",
        "2005-05-30",
        "2006-05-29",
        "2007-05-28",
        "2008-05-26",
        "2009-05-25",
        "2010-05-31",
        "2011-05-30",
        "2012-05-28",
        "2013-05-27",
        "2014-05-26",
        "2015-05-25",
        "2016-05-30",
        "2017-05-29",
        "2018-05-28",
        "2019-05-27",
        "2020-05-25",
        "2021-05-31",
        "2022-05-30",
        "2023-05-29",
        "1998-07-03",
        "1999-07-05",
        "2000-07-04",
        "2001-07-04",
        "2002-07-04",
        "2003-07-04",
        "2004-07-05",
        "2005-07-04",
        "2006-07-04",
        "2007-07-04",
        "2008-07-04",
        "2009-07-03",
        "2010-07-05",
        "2011-07-04",
        "2012-07-04",
        "2013-07-04",
        "2014-07-04",
        "2015-07-03",
        "2016-07-04",
        "2017-07-04",
        "2018-07-04",
        "2019-07-04",
        "2020-07-03",
        "2021-07-05",
        "2022-07-04",
        "2023-07-04",
        "1998-09-07",
        "1999-09-06",
        "2000-09-04",
        "2001-09-03",
        "2002-09-02",
        "2003-09-01",
        "2004-09-06",
        "2005-09-05",
        "2006-09-04",
        "2007-09-03",
        "2008-09-01",
        "2009-09-07",
        "2010-09-06",
        "2011-09-05",
        "2012-09-03",
        "2013-09-02",
        "2014-09-01",
        "2015-09-07",
        "2016-09-05",
        "2017-09-04",
        "2018-09-03",
        "2019-09-02",
        "2020-09-07",
        "2021-09-06",
        "2022-09-05",
        "2023-09-04",
        "1998-11-26",
        "1999-11-25",
        "2000-11-23",
        "2001-11-22",
        "2002-11-28",
        "2003-11-27",
        "2004-11-25",
        "2005-11-24",
        "2006-11-23",
        "2007-11-22",
        "2008-11-27",
        "2009-11-26",
        "2010-11-25",
        "2011-11-24",
        "2012-11-22",
        "2013-11-28",
        "2014-11-27",
        "2015-11-26",
        "2016-11-24",
        "2017-11-23",
        "2018-11-22",
        "2019-11-28",
        "2020-11-26",
        "2021-11-25",
        "2022-11-24",
        "2023-11-23",
        "2018-12-05",
        "1998-12-25",
        "1999-12-24",
        "2000-12-25",
        "2001-12-25",
        "2002-12-25",
        "2003-12-25",
        "2004-12-24",
        "2005-12-26",
        "2006-12-25",
        "2007-12-25",
        "2008-12-25",
        "2009-12-25",
        "2010-12-24",
        "2011-12-26",
        "2012-12-25",
        "2013-12-25",
        "2014-12-25",
        "2015-12-25",
        "2016-12-26",
        "2017-12-25",
        "2018-12-25",
        "2019-12-25",
        "2020-12-25",
        "2021-12-24",
        "2022-12-26",
        "2023-12-25",
        "2024-01-01",
        "2024-12-25",
        "2024-02-19",
    ]))

    def is_holiday(self, date: datetime.date):
        return date in self.HOLIDAYS


class SimpleHolidayProvider(HolidayProvider):

    def __init__(self, container: typing.Container) -> None:
        self.container = container

    def is_holiday(self, date: datetime.date):
        return date in self.container

    @staticmethod
    def nyse():
        import holidays
        container = holidays.NYSE()

        return SimpleHolidayProvider(container)
