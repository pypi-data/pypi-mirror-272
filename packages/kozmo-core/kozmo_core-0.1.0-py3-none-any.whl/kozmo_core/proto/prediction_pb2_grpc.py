# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from proto import prediction_pb2 as proto_dot_prediction__pb2

GRPC_GENERATED_VERSION = '1.63.0'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in proto/prediction_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class GenericStub(object):
    """[END Messages]

    [START Services]

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TransformInput = channel.unary_unary(
                '/kozmo.protos.Generic/TransformInput',
                request_serializer=proto_dot_prediction__pb2.KozmoMessage.SerializeToString,
                response_deserializer=proto_dot_prediction__pb2.KozmoMessage.FromString,
                _registered_method=True)
        self.TransformOutput = channel.unary_unary(
                '/kozmo.protos.Generic/TransformOutput',
                request_serializer=proto_dot_prediction__pb2.KozmoMessage.SerializeToString,
                response_deserializer=proto_dot_prediction__pb2.KozmoMessage.FromString,
                _registered_method=True)
        self.Route = channel.unary_unary(
                '/kozmo.protos.Generic/Route',
                request_serializer=proto_dot_prediction__pb2.KozmoMessage.SerializeToString,
                response_deserializer=proto_dot_prediction__pb2.KozmoMessage.FromString,
                _registered_method=True)
        self.Aggregate = channel.unary_unary(
                '/kozmo.protos.Generic/Aggregate',
                request_serializer=proto_dot_prediction__pb2.KozmoMessageList.SerializeToString,
                response_deserializer=proto_dot_prediction__pb2.KozmoMessage.FromString,
                _registered_method=True)
        self.SendFeedback = channel.unary_unary(
                '/kozmo.protos.Generic/SendFeedback',
                request_serializer=proto_dot_prediction__pb2.Feedback.SerializeToString,
                response_deserializer=proto_dot_prediction__pb2.KozmoMessage.FromString,
                _registered_method=True)


class GenericServicer(object):
    """[END Messages]

    [START Services]

    """

    def TransformInput(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransformOutput(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Route(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Aggregate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendFeedback(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GenericServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TransformInput': grpc.unary_unary_rpc_method_handler(
                    servicer.TransformInput,
                    request_deserializer=proto_dot_prediction__pb2.KozmoMessage.FromString,
                    response_serializer=proto_dot_prediction__pb2.KozmoMessage.SerializeToString,
            ),
            'TransformOutput': grpc.unary_unary_rpc_method_handler(
                    servicer.TransformOutput,
                    request_deserializer=proto_dot_prediction__pb2.KozmoMessage.FromString,
                    response_serializer=proto_dot_prediction__pb2.KozmoMessage.SerializeToString,
            ),
            'Route': grpc.unary_unary_rpc_method_handler(
                    servicer.Route,
                    request_deserializer=proto_dot_prediction__pb2.KozmoMessage.FromString,
                    response_serializer=proto_dot_prediction__pb2.KozmoMessage.SerializeToString,
            ),
            'Aggregate': grpc.unary_unary_rpc_method_handler(
                    servicer.Aggregate,
                    request_deserializer=proto_dot_prediction__pb2.KozmoMessageList.FromString,
                    response_serializer=proto_dot_prediction__pb2.KozmoMessage.SerializeToString,
            ),
            'SendFeedback': grpc.unary_unary_rpc_method_handler(
                    servicer.SendFeedback,
                    request_deserializer=proto_dot_prediction__pb2.Feedback.FromString,
                    response_serializer=proto_dot_prediction__pb2.KozmoMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kozmo.protos.Generic', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Generic(object):
    """[END Messages]

    [START Services]

    """

    @staticmethod
    def TransformInput(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kozmo.protos.Generic/TransformInput',
            proto_dot_prediction__pb2.KozmoMessage.SerializeToString,
            proto_dot_prediction__pb2.KozmoMessage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TransformOutput(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kozmo.protos.Generic/TransformOutput',
            proto_dot_prediction__pb2.KozmoMessage.SerializeToString,
            proto_dot_prediction__pb2.KozmoMessage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Route(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kozmo.protos.Generic/Route',
            proto_dot_prediction__pb2.KozmoMessage.SerializeToString,
            proto_dot_prediction__pb2.KozmoMessage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Aggregate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kozmo.protos.Generic/Aggregate',
            proto_dot_prediction__pb2.KozmoMessageList.SerializeToString,
            proto_dot_prediction__pb2.KozmoMessage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendFeedback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kozmo.protos.Generic/SendFeedback',
            proto_dot_prediction__pb2.Feedback.SerializeToString,
            proto_dot_prediction__pb2.KozmoMessage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class ModelStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Predict = channel.unary_unary(
                '/kozmo.protos.Model/Predict',
                request_serializer=proto_dot_prediction__pb2.KozmoMessage.SerializeToString,
                response_deserializer=proto_dot_prediction__pb2.KozmoMessage.FromString,
                _registered_method=True)
        self.SendFeedback = channel.unary_unary(
                '/kozmo.protos.Model/SendFeedback',
                request_serializer=proto_dot_prediction__pb2.Feedback.SerializeToString,
                response_deserializer=proto_dot_prediction__pb2.KozmoMessage.FromString,
                _registered_method=True)
        self.Metadata = channel.unary_unary(
                '/kozmo.protos.Model/Metadata',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=proto_dot_prediction__pb2.KozmoModelMetadata.FromString,
                _registered_method=True)


class ModelServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Predict(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendFeedback(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Metadata(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ModelServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Predict': grpc.unary_unary_rpc_method_handler(
                    servicer.Predict,
                    request_deserializer=proto_dot_prediction__pb2.KozmoMessage.FromString,
                    response_serializer=proto_dot_prediction__pb2.KozmoMessage.SerializeToString,
            ),
            'SendFeedback': grpc.unary_unary_rpc_method_handler(
                    servicer.SendFeedback,
                    request_deserializer=proto_dot_prediction__pb2.Feedback.FromString,
                    response_serializer=proto_dot_prediction__pb2.KozmoMessage.SerializeToString,
            ),
            'Metadata': grpc.unary_unary_rpc_method_handler(
                    servicer.Metadata,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=proto_dot_prediction__pb2.KozmoModelMetadata.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kozmo.protos.Model', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Model(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Predict(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kozmo.protos.Model/Predict',
            proto_dot_prediction__pb2.KozmoMessage.SerializeToString,
            proto_dot_prediction__pb2.KozmoMessage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendFeedback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kozmo.protos.Model/SendFeedback',
            proto_dot_prediction__pb2.Feedback.SerializeToString,
            proto_dot_prediction__pb2.KozmoMessage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Metadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kozmo.protos.Model/Metadata',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            proto_dot_prediction__pb2.KozmoModelMetadata.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class RouterStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Route = channel.unary_unary(
                '/kozmo.protos.Router/Route',
                request_serializer=proto_dot_prediction__pb2.KozmoMessage.SerializeToString,
                response_deserializer=proto_dot_prediction__pb2.KozmoMessage.FromString,
                _registered_method=True)
        self.SendFeedback = channel.unary_unary(
                '/kozmo.protos.Router/SendFeedback',
                request_serializer=proto_dot_prediction__pb2.Feedback.SerializeToString,
                response_deserializer=proto_dot_prediction__pb2.KozmoMessage.FromString,
                _registered_method=True)


class RouterServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Route(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendFeedback(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RouterServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Route': grpc.unary_unary_rpc_method_handler(
                    servicer.Route,
                    request_deserializer=proto_dot_prediction__pb2.KozmoMessage.FromString,
                    response_serializer=proto_dot_prediction__pb2.KozmoMessage.SerializeToString,
            ),
            'SendFeedback': grpc.unary_unary_rpc_method_handler(
                    servicer.SendFeedback,
                    request_deserializer=proto_dot_prediction__pb2.Feedback.FromString,
                    response_serializer=proto_dot_prediction__pb2.KozmoMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kozmo.protos.Router', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Router(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Route(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kozmo.protos.Router/Route',
            proto_dot_prediction__pb2.KozmoMessage.SerializeToString,
            proto_dot_prediction__pb2.KozmoMessage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendFeedback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kozmo.protos.Router/SendFeedback',
            proto_dot_prediction__pb2.Feedback.SerializeToString,
            proto_dot_prediction__pb2.KozmoMessage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class TransformerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TransformInput = channel.unary_unary(
                '/kozmo.protos.Transformer/TransformInput',
                request_serializer=proto_dot_prediction__pb2.KozmoMessage.SerializeToString,
                response_deserializer=proto_dot_prediction__pb2.KozmoMessage.FromString,
                _registered_method=True)


class TransformerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def TransformInput(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TransformerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TransformInput': grpc.unary_unary_rpc_method_handler(
                    servicer.TransformInput,
                    request_deserializer=proto_dot_prediction__pb2.KozmoMessage.FromString,
                    response_serializer=proto_dot_prediction__pb2.KozmoMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kozmo.protos.Transformer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Transformer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def TransformInput(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kozmo.protos.Transformer/TransformInput',
            proto_dot_prediction__pb2.KozmoMessage.SerializeToString,
            proto_dot_prediction__pb2.KozmoMessage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class OutputTransformerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TransformOutput = channel.unary_unary(
                '/kozmo.protos.OutputTransformer/TransformOutput',
                request_serializer=proto_dot_prediction__pb2.KozmoMessage.SerializeToString,
                response_deserializer=proto_dot_prediction__pb2.KozmoMessage.FromString,
                _registered_method=True)


class OutputTransformerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def TransformOutput(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OutputTransformerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TransformOutput': grpc.unary_unary_rpc_method_handler(
                    servicer.TransformOutput,
                    request_deserializer=proto_dot_prediction__pb2.KozmoMessage.FromString,
                    response_serializer=proto_dot_prediction__pb2.KozmoMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kozmo.protos.OutputTransformer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OutputTransformer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def TransformOutput(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kozmo.protos.OutputTransformer/TransformOutput',
            proto_dot_prediction__pb2.KozmoMessage.SerializeToString,
            proto_dot_prediction__pb2.KozmoMessage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class CombinerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Aggregate = channel.unary_unary(
                '/kozmo.protos.Combiner/Aggregate',
                request_serializer=proto_dot_prediction__pb2.KozmoMessageList.SerializeToString,
                response_deserializer=proto_dot_prediction__pb2.KozmoMessage.FromString,
                _registered_method=True)


class CombinerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Aggregate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CombinerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Aggregate': grpc.unary_unary_rpc_method_handler(
                    servicer.Aggregate,
                    request_deserializer=proto_dot_prediction__pb2.KozmoMessageList.FromString,
                    response_serializer=proto_dot_prediction__pb2.KozmoMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kozmo.protos.Combiner', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Combiner(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Aggregate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kozmo.protos.Combiner/Aggregate',
            proto_dot_prediction__pb2.KozmoMessageList.SerializeToString,
            proto_dot_prediction__pb2.KozmoMessage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class KozmoStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Predict = channel.unary_unary(
                '/kozmo.protos.Kozmo/Predict',
                request_serializer=proto_dot_prediction__pb2.KozmoMessage.SerializeToString,
                response_deserializer=proto_dot_prediction__pb2.KozmoMessage.FromString,
                _registered_method=True)
        self.SendFeedback = channel.unary_unary(
                '/kozmo.protos.Kozmo/SendFeedback',
                request_serializer=proto_dot_prediction__pb2.Feedback.SerializeToString,
                response_deserializer=proto_dot_prediction__pb2.KozmoMessage.FromString,
                _registered_method=True)
        self.ModelMetadata = channel.unary_unary(
                '/kozmo.protos.Kozmo/ModelMetadata',
                request_serializer=proto_dot_prediction__pb2.KozmoModelMetadataRequest.SerializeToString,
                response_deserializer=proto_dot_prediction__pb2.KozmoModelMetadata.FromString,
                _registered_method=True)
        self.GraphMetadata = channel.unary_unary(
                '/kozmo.protos.Kozmo/GraphMetadata',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=proto_dot_prediction__pb2.KozmoGraphMetadata.FromString,
                _registered_method=True)


class KozmoServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Predict(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendFeedback(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ModelMetadata(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GraphMetadata(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_KozmoServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Predict': grpc.unary_unary_rpc_method_handler(
                    servicer.Predict,
                    request_deserializer=proto_dot_prediction__pb2.KozmoMessage.FromString,
                    response_serializer=proto_dot_prediction__pb2.KozmoMessage.SerializeToString,
            ),
            'SendFeedback': grpc.unary_unary_rpc_method_handler(
                    servicer.SendFeedback,
                    request_deserializer=proto_dot_prediction__pb2.Feedback.FromString,
                    response_serializer=proto_dot_prediction__pb2.KozmoMessage.SerializeToString,
            ),
            'ModelMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.ModelMetadata,
                    request_deserializer=proto_dot_prediction__pb2.KozmoModelMetadataRequest.FromString,
                    response_serializer=proto_dot_prediction__pb2.KozmoModelMetadata.SerializeToString,
            ),
            'GraphMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.GraphMetadata,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=proto_dot_prediction__pb2.KozmoGraphMetadata.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kozmo.protos.Kozmo', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Kozmo(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Predict(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kozmo.protos.Kozmo/Predict',
            proto_dot_prediction__pb2.KozmoMessage.SerializeToString,
            proto_dot_prediction__pb2.KozmoMessage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendFeedback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kozmo.protos.Kozmo/SendFeedback',
            proto_dot_prediction__pb2.Feedback.SerializeToString,
            proto_dot_prediction__pb2.KozmoMessage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ModelMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kozmo.protos.Kozmo/ModelMetadata',
            proto_dot_prediction__pb2.KozmoModelMetadataRequest.SerializeToString,
            proto_dot_prediction__pb2.KozmoModelMetadata.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GraphMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kozmo.protos.Kozmo/GraphMetadata',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            proto_dot_prediction__pb2.KozmoGraphMetadata.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
