def b4():
    print('''

# -*- coding: utf-8 -*-
"""B4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LyJeqmL7rGURnKNsacXJGdQoGLlej0U0
"""

x1 = [[1,1, 1, 1]];
x2 = [[1,-1,-1, 1]];
x3 = [[-1,1,-1,-1]];
x4 = [[1,-1,-1,-1]];

import numpy as np
# Transpose
x11 = np.transpose(x1, axes = None)
print(x11)
w1 = x1*x11
print(w1)
x21 = np.transpose(x2, axes = None)
print(x21)
w2 = x2*x21
print(w2)
x31 = np.transpose(x3, axes = None)
print(x31)
w3 = x3*x31
print(w3)
x41 = np.transpose(x4, axes = None)
print(x41)
w4 = x4*x41
print(w4)

W = w1+w2+w3+w4
print(W)

np.dot(x1,W)

def make_diagonal_zero(matrix):
    for i in range(min(len(matrix), len(matrix[0]))):
        matrix[i][i] = 0
    return matrix



W_rev = make_diagonal_zero(W)
print(W_rev)

print(W)

# testing of the Hopfield vectors
xt1 = np.dot(x1,W_rev)
print(xt1)

def activate(x, theta=0):
    return np.where(x>theta, 1, np.where(x == theta, x, 0))

xt1_act = activate(xt1)
print(xt1_act)

if(np.array_equal(x1, xt1_act)):
  print("testing complete")
else: print("testing failed")

''')
b4()