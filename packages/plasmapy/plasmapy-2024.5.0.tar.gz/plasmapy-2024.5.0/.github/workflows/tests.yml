name: CI

on:
  push:
    branches:
    - main
    - stable
    - v*.*.*
    tags:
    - v*
  pull_request:
  workflow_dispatch:

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:

  tests:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        include:

        - name: Python 3.12, with doctests, skip slow tests, Ubuntu
          os: ubuntu-latest
          python: '3.12'
          toxenv: py312-pins-pytest_doctests_skipslow

        - name: Python 3.11, all tests, code coverage, macOS
          os: macos-latest
          python: '3.11'
          toxenv: py311-pins-pytest_cov_all

        - name: Python 3.10, lowest direct dependencies, skip slow tests, Windows
          os: windows-latest
          python: '3.10'
          toxenv: py310-lowest_direct-pytest_skipslow

    steps:

    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python }}
        cache: pip

    - name: Install and upgrade test tools
      run: python -m pip install --progress-bar off --upgrade tox tox-uv

    - name: Cache
      uses: actions/cache@v4
      with:
        path: |
          .tox
        key: ${{ matrix.toxenv }}-${{ runner.os }}-${{ hashFiles('requirements.txt', 'pyproject.toml') }}

    - name: Run tests
      run: tox -e ${{ matrix.toxenv }}

    - name: Upload coverage reports to Codecov
      if: ${{ contains(matrix.toxenv,'_cov') }}
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  import-plasmapy:

    name: Import PlasmaPy, Python 3.10, Windows
    runs-on: windows-latest

    steps:

    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: pip

    - name: Install tox and its extensions
      run: python -m pip install --progress-bar off --upgrade tox tox-uv

    - name: Import PlasmaPy
      run: tox -e py310-lowest_direct-pypi-import

  build-n-publish:
    name: Packaging, Python 3.12, Ubuntu
    runs-on: ubuntu-22.04

    steps:

    - uses: actions/checkout@v4

    - name: Get history and tags for SCM versioning to work
      run: |
        git fetch --prune --unshallow
        git fetch --depth=1 origin +refs/tags/*:refs/tags/*

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: pip

    - name: Install and upgrade requirements
      run: |
        pip install --progress-bar off setuptools numpy wheel setuptools_scm twine build pip --upgrade

    - name: Build a source distribution
      run: python -m build --sdist --outdir dist/

    - name: Build a binary wheel
      run: python -m build --wheel --outdir dist/

    - name: Twine check
      run: twine check dist/*

    - name: Install PlasmaPy with pip
      run: |
        pip install --progress-bar off .

    - name: Perform editable installation with tests & docs requirements sets
      run: |
        pip install --progress-bar off -e .[tests,docs]

  validate-citation-cff:
    runs-on: ubuntu-latest
    name: Validate CITATION.cff
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Validate CITATION.cff
      uses: dieghernan/cff-validator@v3
