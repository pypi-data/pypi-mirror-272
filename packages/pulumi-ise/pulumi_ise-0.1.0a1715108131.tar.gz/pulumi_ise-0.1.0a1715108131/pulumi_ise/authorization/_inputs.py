# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'ProfileAdvancedAttributeArgs',
]

@pulumi.input_type
class ProfileAdvancedAttributeArgs:
    def __init__(__self__, *,
                 attribute_left_dictionary_name: Optional[pulumi.Input[str]] = None,
                 attribute_left_name: Optional[pulumi.Input[str]] = None,
                 attribute_right_dictionary_name: Optional[pulumi.Input[str]] = None,
                 attribute_right_name: Optional[pulumi.Input[str]] = None,
                 attribute_right_value: Optional[pulumi.Input[str]] = None,
                 attribute_right_value_type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] attribute_left_dictionary_name: Dictionary name
        :param pulumi.Input[str] attribute_left_name: Attribute name
        :param pulumi.Input[str] attribute_right_dictionary_name: Dictionary name, only required when `attribute_right_value_type` is `AdvancedDictionaryAttribute`
        :param pulumi.Input[str] attribute_right_name: Attribute name, only required when `attribute_right_value_type` is `AdvancedDictionaryAttribute`
        :param pulumi.Input[str] attribute_right_value: Attribute value, only required when `attribute_right_value_type` is `AttributeValue`
        :param pulumi.Input[str] attribute_right_value_type: Advanced attribute value type
                 - Choices: `AdvancedDictionaryAttribute`, `AttributeValue`
        """
        if attribute_left_dictionary_name is not None:
            pulumi.set(__self__, "attribute_left_dictionary_name", attribute_left_dictionary_name)
        if attribute_left_name is not None:
            pulumi.set(__self__, "attribute_left_name", attribute_left_name)
        if attribute_right_dictionary_name is not None:
            pulumi.set(__self__, "attribute_right_dictionary_name", attribute_right_dictionary_name)
        if attribute_right_name is not None:
            pulumi.set(__self__, "attribute_right_name", attribute_right_name)
        if attribute_right_value is not None:
            pulumi.set(__self__, "attribute_right_value", attribute_right_value)
        if attribute_right_value_type is not None:
            pulumi.set(__self__, "attribute_right_value_type", attribute_right_value_type)

    @property
    @pulumi.getter(name="attributeLeftDictionaryName")
    def attribute_left_dictionary_name(self) -> Optional[pulumi.Input[str]]:
        """
        Dictionary name
        """
        return pulumi.get(self, "attribute_left_dictionary_name")

    @attribute_left_dictionary_name.setter
    def attribute_left_dictionary_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "attribute_left_dictionary_name", value)

    @property
    @pulumi.getter(name="attributeLeftName")
    def attribute_left_name(self) -> Optional[pulumi.Input[str]]:
        """
        Attribute name
        """
        return pulumi.get(self, "attribute_left_name")

    @attribute_left_name.setter
    def attribute_left_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "attribute_left_name", value)

    @property
    @pulumi.getter(name="attributeRightDictionaryName")
    def attribute_right_dictionary_name(self) -> Optional[pulumi.Input[str]]:
        """
        Dictionary name, only required when `attribute_right_value_type` is `AdvancedDictionaryAttribute`
        """
        return pulumi.get(self, "attribute_right_dictionary_name")

    @attribute_right_dictionary_name.setter
    def attribute_right_dictionary_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "attribute_right_dictionary_name", value)

    @property
    @pulumi.getter(name="attributeRightName")
    def attribute_right_name(self) -> Optional[pulumi.Input[str]]:
        """
        Attribute name, only required when `attribute_right_value_type` is `AdvancedDictionaryAttribute`
        """
        return pulumi.get(self, "attribute_right_name")

    @attribute_right_name.setter
    def attribute_right_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "attribute_right_name", value)

    @property
    @pulumi.getter(name="attributeRightValue")
    def attribute_right_value(self) -> Optional[pulumi.Input[str]]:
        """
        Attribute value, only required when `attribute_right_value_type` is `AttributeValue`
        """
        return pulumi.get(self, "attribute_right_value")

    @attribute_right_value.setter
    def attribute_right_value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "attribute_right_value", value)

    @property
    @pulumi.getter(name="attributeRightValueType")
    def attribute_right_value_type(self) -> Optional[pulumi.Input[str]]:
        """
        Advanced attribute value type
          - Choices: `AdvancedDictionaryAttribute`, `AttributeValue`
        """
        return pulumi.get(self, "attribute_right_value_type")

    @attribute_right_value_type.setter
    def attribute_right_value_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "attribute_right_value_type", value)


