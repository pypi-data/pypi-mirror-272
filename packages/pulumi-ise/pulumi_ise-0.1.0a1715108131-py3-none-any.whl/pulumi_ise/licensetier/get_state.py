# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetStateResult',
    'AwaitableGetStateResult',
    'get_state',
    'get_state_output',
]

@pulumi.output_type
class GetStateResult:
    """
    A collection of values returned by getState.
    """
    def __init__(__self__, id=None, licenses=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if licenses and not isinstance(licenses, list):
            raise TypeError("Expected argument 'licenses' to be a list")
        pulumi.set(__self__, "licenses", licenses)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The id of the object
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def licenses(self) -> Sequence['outputs.GetStateLicenseResult']:
        """
        List of licenses
        """
        return pulumi.get(self, "licenses")


class AwaitableGetStateResult(GetStateResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetStateResult(
            id=self.id,
            licenses=self.licenses)


def get_state(id: Optional[str] = None,
              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetStateResult:
    """
    This data source can read the License Tier State.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_ise as ise

    example = ise.LicenseTier.get_state(id="76d24097-41c4-4558-a4d0-a8c07ac08470")
    ```


    :param str id: The id of the object
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('ise:LicenseTier/getState:getState', __args__, opts=opts, typ=GetStateResult).value

    return AwaitableGetStateResult(
        id=pulumi.get(__ret__, 'id'),
        licenses=pulumi.get(__ret__, 'licenses'))


@_utilities.lift_output_func(get_state)
def get_state_output(id: Optional[pulumi.Input[str]] = None,
                     opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetStateResult]:
    """
    This data source can read the License Tier State.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_ise as ise

    example = ise.LicenseTier.get_state(id="76d24097-41c4-4558-a4d0-a8c07ac08470")
    ```


    :param str id: The id of the object
    """
    ...
