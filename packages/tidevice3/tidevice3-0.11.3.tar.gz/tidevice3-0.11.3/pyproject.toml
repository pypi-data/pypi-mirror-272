[tool.poetry]
name = "tidevice3"
version = "0.11.3"
description = "wrapper for pymobiledevice3 for easy use with iphone device"
homepage = "https://github.com/codeskyblue/tidevice3"
authors = ["codeskyblue <codeskyblue@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.8"
pymobiledevice3 = "^4.2.3"
click = "*"
pydantic = "^2.5.3"
fastapi = "*"
requests = "*"
numpy = "*"
imageio = {extras = ["ffmpeg"], version = "^2.33.1"}
pillow = "^10.0"
zeroconf = "^0.132.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
pytest-cov = "^4.1.0"
pytest-httpserver = "^1.0.8"
isort = "^5.13.2"

[tool.poetry.scripts]
t3 = "tidevice3.__main__:main"

# 根据tag来动态配置版本号,tag需要v开头，比如v0.0.1
[tool.poetry-dynamic-versioning]
enable = false

# 需要将原本的build-system替换掉
[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.coverage.run]
branch = true

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
    ]

ignore_errors = true
omit = [
    "tests/*",
    "docs/*",
    "__main__.py",
]
