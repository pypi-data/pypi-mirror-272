[tool.poetry]
name = "docopt-parser"
description = "A parser for the docopt language"
version = "0.0.1"
authors = ["Anders Ingemann <anders@ingemann.de>"]
license = "MIT"
readme = "README.adoc"
homepage = "https://github.com/andsens/docopt-parser"
repository = "https://github.com/andsens/docopt-parser"
classifiers = [
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "License :: OSI Approved :: MIT License",
]
packages = [
  { include = "docopt_parser" },
  { include = "docopt_parser/py.typed" },
]

[tool.pylint.'MESSAGES CONTROL']
indent-string = "  "
disable = [
  "missing-function-docstring",
  "missing-class-docstring",
]

[tool.flake8]
max-line-length = 120
ignore = "E111,E114,E121,W503,E302,E303,E305"

[tool.pyright]
include = ["docopt_parser", "tests"]
typeCheckingMode = "strict"
reportMissingTypeStubs = false
exclude = [ ".venv" ]
venvPath = "."
venv = ".venv"

[tool.poetry.dependencies]
python = ">=3.11.0,<4.0"
docopt = "^0.6.2"
termcolor = "^1.1.0"
parsec = "^3.13"
pyyaml = "^6.0"
ordered-set = "^4.1.0"
flake8-pyproject = "^1.1.0.post0"

[tool.poetry.dev-dependencies]
flake8 = "^6.0.0"
pytest = "^7.1.1"
pytest-xdist = "^2.5.0"
pytest-flake8 = "^1.1.1"
hypothesis = "^6.39.4"
pyright = "^1.1.238"

[tool.poetry.scripts]
docopt-parser = "docopt_parser.__main__:main"


[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
