[tool.poetry]
name = "pydantic-aioredis"
version = "1.4.0"
description = "Use your pydantic models as an ORM, storing data in Redis."
authors = ["Andrew Herrington <andrew.the.techie@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/andrewthetechie/pydantic-aioredis"
repository = "https://github.com/andrewthetechie/pydantic-aioredis"
documentation = "https://pydantic-aioredis.readthedocs.io/en/latest/"
classifiers = [
	"Development Status :: 4 - Beta",
	"Intended Audience :: Developers",
	"License :: OSI Approved :: MIT License",
	"Programming Language :: Python",
	"Programming Language :: Python :: 3",
	"Programming Language :: Python :: 3.7",
	"Programming Language :: Python :: 3.8",
	"Programming Language :: Python :: 3.9",
	"Programming Language :: Python :: 3.10",
	"Framework :: AsyncIO"
]

[tool.poetry.urls]
Changelog = "https://github.com/andrewthetechie/pydantic-aioredis/releases"

[tool.poetry.dependencies]
python = "^3.8"
pydantic = "^1.10.2"
redis = ">=4.4.4,<6.0.0"
anyio = ">=3.6.2,<5.0.0"
fastapi = {version = ">=0.110", optional = true}
fastapi-crudrouter = {version = "^0.8.6", optional = true}

[tool.poetry.extras]
FastAPI= ['fastapi']
fastapi-crudrouter=['fastapi-crudrouter']


[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
coverage = {extras = ["toml"], version = ">=6.5,<8.0"}
safety = ">=2.3.1,<4.0.0"
mypy = ">=0.991,<1.11"
xdoctest = {extras = ["colors"], version = "^1.1.0"}
sphinx = ">=4.3.2,<8.0.0"
sphinx-autobuild = ">=2021.3.14"
pre-commit = ">=2.12.1"
pep8-naming = "^0.13.2"
reorder-python-imports = "^3.9.0"
pre-commit-hooks = "^4.2.0"
Pygments = "^2.13.0"
pyupgrade = "^3.3.1"
furo = ">=2021.11.12"
pytest-cov = ">=4,<6"
types-croniter = ">=1.3.2,<3.0.0"
pytest_async = "^0.1.1"
pytest-asyncio = ">=0.20.1,<0.22.0"
pytest-mock = "^3.10.0"
pytest-lazy-fixture = "^0.6.3"
fastapi = ">=0.6.3"
fastapi-crudrouter = ">=0.8.4"
httpx = ">=0.23,<0.28"
pytest-env = ">=0.8.1,<1.2.0"
pytest-xdist = "^3.1.0"
bandit = "^1.7.8"
fakeredis = {extras = ["json"], version = "2.23.0"}
hypothesis = "^6.61.0"
pytest-rerunfailures = ">=11.1,<15.0"
ruff = "^0.4.2"

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.bandit]
exclude_dirs = ["test", "noxfile.py", ".github/scripts", "dist", "examples/*"]

[tool.pytest.ini_options]
addopts = "-n 4 --ignore examples --cov=pydantic_aioredis --cov-report xml:.coverage.xml --cov-report=term-missing --cov-fail-under 85"

[tool.ruff]
line-length = 120
target-version = "py38"
